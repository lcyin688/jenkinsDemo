{"version":3,"sources":["assets/cases/07_capture_texture/textureRenderUtils.js"],"names":["cc","Class","Component","properties","camera","Camera","label","Label","_canvas","init","string","texture","RenderTexture","initWithSize","visibleRect","width","height","gfx","RB_FMT_S8","targetTexture","createImg","dataURL","toDataURL","img","document","createElement","src","createCanvas","clearCanvas","ctx","getContext","render","data","readPixels","rowBytes","row","srow","imageData","createImageData","start","i","putImageData","showImage","Texture2D","initWithElement","spriteFrame","SpriteFrame","setTexture","node","Node","sprite","addComponent","Sprite","zIndex","macro","MAX_ZINDEX","parent","director","getScene","winSize","x","y","on","EventType","TOUCH_START","destroy","captureAction","capture","scaleAction","scaleTo","targetPos","v2","moveAction","moveTo","spawn","runAction","blinkAction","blink","clearRect"],"mappings":"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","sourceRoot":"/","sourcesContent":["cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        camera: cc.Camera,\n        label: cc.Label,\n        _canvas: null\n    },\n\n    init () {\n        this.label.string = '';\n        let texture = new cc.RenderTexture();\n        texture.initWithSize(cc.visibleRect.width, cc.visibleRect.height, cc.gfx.RB_FMT_S8);\n        this.camera.targetTexture = texture;\n        this.texture = texture;\n    },\n    // create the img element\n    createImg () {\n        // return the type and dataUrl\n        var dataURL = this._canvas.toDataURL(\"image/png\");\n        var img = document.createElement(\"img\");\n        img.src = dataURL;\n        return img;\n    },\n    // create the canvas and context, filpY the image Data\n    createCanvas () {\n        let width = this.texture.width;\n        let height = this.texture.height;\n        if (!this._canvas) {\n            this._canvas = document.createElement('canvas');\n\n            this._canvas.width = width;\n            this._canvas.height = height;\n        }\n        else {\n            this.clearCanvas();\n        }\n        let ctx = this._canvas.getContext('2d');\n        this.camera.render();\n        let data = this.texture.readPixels();\n        // write the render data\n        let rowBytes = width * 4; \n        for (let row = 0; row < height; row++) {\n            let srow = height - 1 - row;\n            let imageData = ctx.createImageData(width, 1);\n            let start = srow * width * 4;\n            for (let i = 0; i < rowBytes; i++) {\n                imageData.data[i] = data[start + i];\n            }\n\n            ctx.putImageData(imageData, 0, row);\n        }\n        return this._canvas;\n    },\n    \n    // show on the canvas\n    showImage (img) {\n        let texture = new cc.Texture2D();\n        texture.initWithElement(img);\n\n        let spriteFrame = new cc.SpriteFrame();\n        spriteFrame.setTexture(texture);\n\n        let node = new cc.Node();\n        let sprite = node.addComponent(cc.Sprite);\n        sprite.spriteFrame = spriteFrame;\n\n        node.zIndex = cc.macro.MAX_ZINDEX;\n        node.parent = cc.director.getScene();\n        // set position\n        let width = cc.winSize.width;\n        let height = cc.winSize.height;\n        node.x = width / 2;\n        node.y = height / 2;\n        node.on(cc.Node.EventType.TOUCH_START, () => {\n            node.parent = null;\n            this.label.string = '';\n            node.destroy();\n        });\n\n        this.captureAction(node, width, height);\n    },\n    // sprite action\n    captureAction (capture, width, height) {\n        let scaleAction = cc.scaleTo(1,0.3);\n        let targetPos = cc.v2(width - width / 6,  height / 4);\n        let moveAction = cc.moveTo(1, targetPos); \n        let spawn = cc.spawn(scaleAction, moveAction);\n        capture.runAction(spawn);\n        let blinkAction = cc.blink(0.1, 1);\n        // scene action\n        this.node.runAction(blinkAction);\n    },\n\n    clearCanvas () {\n        let ctx = this._canvas.getContext('2d');\n        ctx.clearRect(0, 0, this._canvas.width, this._canvas.height);\n    }\n});\n"]}