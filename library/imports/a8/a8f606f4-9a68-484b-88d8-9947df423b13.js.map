{"version":3,"sources":["assets/cases/3d_physics/scripts/scale.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAM,IAAA,KAAsB,EAAE,CAAC,UAAU,EAAlC,OAAO,aAAA,EAAE,QAAQ,cAAiB,CAAC;AAG1C;IAAmC,yBAAY;IAA/C;QAAA,qEAmDC;QAhDG,QAAE,GAAW,IAAI,CAAC;QAGlB,QAAE,GAAW,IAAI,CAAC;QAGlB,QAAE,GAAW,IAAI,CAAC;QAGlB,WAAK,GAAU,KAAK,CAAC;QAEb,iBAAW,GAAW,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAC3C,eAAS,GAAW,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;;IAoCrD,CAAC;IAlCG,qBAAK,GAAL;QACI,IAAI,CAAC,WAAW,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;QACtC,IAAI,CAAC,WAAW,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;QACtC,IAAI,CAAC,WAAW,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;QACtC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;IACnD,CAAC;IAED,sBAAM,GAAN,UAAQ,EAAE;QACN,IAAI,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC;QAC3B,IAAI,IAAI,CAAC,EAAE,EAAE;YACT,KAAK,CAAC,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC;SACzB;QAED,IAAI,IAAI,CAAC,EAAE,EAAE;YACT,KAAK,CAAC,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC;SACzB;QAED,IAAI,IAAI,CAAC,EAAE,EAAE;YACT,KAAK,CAAC,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC;SACzB;QAED,IAAI,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,GAAG,GAAG;YAClC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,GAAG,CAAC;YAChC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,GAAG,GAAG;YAClC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,GAAG,CAAC;YAChC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,GAAG,GAAG;YAClC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,GAAG,CAAC,EAAG;YACnC,IAAI,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC;SACpB;QAED,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,CAAC,CAAC;QAC3B,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,CAAC,CAAC;QAC3B,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,CAAC,CAAC;IAC/B,CAAC;IA/CD;QADC,QAAQ;qCACS;IAGlB;QADC,QAAQ;qCACS;IAGlB;QADC,QAAQ;qCACS;IAGlB;QADC,QAAQ;wCACY;IAZJ,KAAK;QADzB,OAAO;OACa,KAAK,CAmDzB;IAAD,YAAC;CAnDD,AAmDC,CAnDkC,EAAE,CAAC,SAAS,GAmD9C;kBAnDoB,KAAK","file":"","sourceRoot":"/","sourcesContent":["const {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class Scale extends cc.Component {\n\n    @property\n    mx:boolean = true;\n\n    @property\n    my:boolean = true;\n\n    @property\n    mz:boolean = true;\n\n    @property\n    speed:number = 0.001;\n\n    private originScale:cc.Vec3 = new cc.Vec3(1, 1, 1);\n    private tempScale:cc.Vec3 = new cc.Vec3(1, 1, 1);\n\n    start () {\n        this.originScale.x = this.node.scaleX;\n        this.originScale.y = this.node.scaleY;\n        this.originScale.z = this.node.scaleZ;\n        cc.Vec3.copy(this.tempScale, this.originScale);\n    }\n\n    update (dt) {\n        let scale = this.tempScale;\n        if (this.mx) {\n            scale.x += this.speed;\n        }\n\n        if (this.my) {\n            scale.y += this.speed;\n        }\n        \n        if (this.mz) {\n            scale.z += this.speed;\n        }\n\n        if (scale.x - this.originScale.x > 200 || \n            scale.x - this.originScale.x < 0 ||\n            scale.y - this.originScale.y > 200 ||\n            scale.y - this.originScale.y < 0 ||\n            scale.z - this.originScale.z > 200 ||\n            scale.z - this.originScale.z < 0 ) {\n            this.speed *= -1;\n        }\n\n        this.node.scaleX = scale.x;\n        this.node.scaleY = scale.y;\n        this.node.scaleZ = scale.z;\n    }\n}\n"]}