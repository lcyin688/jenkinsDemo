{"version":3,"sources":["assets/i18n/i18n.js"],"names":["Polyglot","require","data","cc","sys","language","polyglot","phrases","allowMissing","module","exports","init","lang","replace","t","key","opt"],"mappings":";;;;;;AAAA,IAAMA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB;;AAEA,IAAIC,IAAI,GAAGC,EAAE,CAACC,GAAH,CAAOC,QAAP,KAAoB,IAApB,GAA2BJ,OAAO,CAAC,IAAD,CAAlC,GAA2CA,OAAO,CAAC,IAAD,CAA7D,EACA;;AACA,IAAIK,QAAQ,GAAG,IAAIN,QAAJ,CAAa;EAACO,OAAO,EAAEL,IAAV;EAAgBM,YAAY,EAAE;AAA9B,CAAb,CAAf;AAGAC,MAAM,CAACC,OAAP,GAAiB;EACb;AACJ;AACA;AACA;AACA;AACA;EACIC,IAPa,gBAOPN,QAPO,EAOG;IACZO,IAAI,GAAGP,QAAP;IACAH,IAAI,GAAGG,QAAQ,KAAK,IAAb,GAAoBJ,OAAO,CAAC,IAAD,CAA3B,GAAoCA,OAAO,CAAC,IAAD,CAAlD;IACAK,QAAQ,CAACO,OAAT,CAAiBX,IAAjB;EACH,CAXY;;EAYb;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIY,CA1Ba,aA0BVC,GA1BU,EA0BLC,GA1BK,EA0BA;IACT,OAAOV,QAAQ,CAACQ,CAAT,CAAWC,GAAX,EAAgBC,GAAhB,CAAP;EACH;AA5BY,CAAjB","sourceRoot":"/","sourcesContent":["const Polyglot = require('polyglot');\n\nlet data = cc.sys.language === 'zh' ? require('zh') : require('en');\n// let polyglot = null;\nlet polyglot = new Polyglot({phrases: data, allowMissing: true});\n\n\nmodule.exports = {\n    /**\n     * This method allow you to switch language during runtime, language argument should be the same as your data file name\n     * such as when language is 'zh', it will load your 'zh.js' data source.\n     * @method init\n     * @param language - the language specific data file name, such as 'zh' to load 'zh.js'\n     */\n    init (language) {\n        lang = language;\n        data = language === 'zh' ? require('zh') : require('en');\n        polyglot.replace(data);\n    },\n    /**\n     * this method takes a text key as input, and return the localized string\n     * Please read https://github.com/airbnb/polyglot.js for details\n     * @method t\n     * @return {String} localized string\n     * @example\n     *\n     * var myText = i18n.t('MY_TEXT_KEY');\n     *\n     * // if your data source is defined as\n     * // {\"hello_name\": \"Hello, %{name}\"}\n     * // you can use the following to interpolate the text\n     * var greetingText = i18n.t('hello_name', {name: 'nantas'}); // Hello, nantas\n     */\n    t (key, opt) {\n        return polyglot.t(key, opt);\n    }\n};"]}