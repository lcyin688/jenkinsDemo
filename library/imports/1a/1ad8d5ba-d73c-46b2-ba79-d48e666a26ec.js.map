{"version":3,"sources":["assets/cases/03_gameplay/tween/tween-demo.js"],"names":["t","cc","tween","Class","Component","properties","nodes","Node","start","i","length","node","delay","repeat","set","opacity","scale","x","rotation","parallel","to","easing"],"mappings":";;;;;;AAAA,IAAMA,CAAC,GAAGC,EAAE,CAACC,KAAb;AAEAD,EAAE,CAACE,KAAH,CAAS;EACP,WAASF,EAAE,CAACG,SADL;EAGPC,UAAU,EAAE;IACVC,KAAK,EAAE,CAACL,EAAE,CAACM,IAAJ;EADG,CAHL;EAOPC,KAPO,mBAOE;IACP,IAAIF,KAAK,GAAG,KAAKA,KAAjB;;IACA,KAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,KAAK,CAACI,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;MACrC,IAAIE,IAAI,GAAGL,KAAK,CAACG,CAAD,CAAhB;MACAT,CAAC,CAACW,IAAD,CAAD,CACE;MADF,CAEGC,KAFH,CAES,MAAMH,CAAC,GAAG,GAFnB,EAGE;MAHF,CAIGI,MAJH,CAIU,IAJV,EAKIb,CAAC,GACC;MADD,CAEEc,GAFH,CAEO;QAAEC,OAAO,EAAE,CAAX;QAAcC,KAAK,EAAE,EAArB;QAAyBC,CAAC,EAAE,CAA5B;QAA+BC,QAAQ,EAAE;MAAzC,CAFP,EAGE;MAHF,CAIGC,QAJH,CAKInB,CAAC,GAAGoB,EAAJ,CAAO,CAAP,EAAU;QAAEL,OAAO,EAAE,GAAX;QAAgBC,KAAK,EAAE;MAAvB,CAAV,EAAsC;QAAEK,MAAM,EAAE;MAAV,CAAtC,CALJ,EAMIrB,CAAC,GAAGoB,EAAJ,CAAO,GAAP,EAAY;QAAEH,CAAC,EAAEN,IAAI,CAACM;MAAV,CAAZ,EAA2B;QAAEI,MAAM,EAAE;MAAV,CAA3B,CANJ,EAQGT,KARH,CAQS,GART,EASGQ,EATH,CASM,GATN,EASW;QAAEF,QAAQ,EAAE;MAAZ,CATX,EAS8B;QAAEG,MAAM,EAAE;MAAV,CAT9B,EAUGT,KAVH,CAUS,CAVT,EAWGQ,EAXH,CAWM,GAXN,EAWW;QAAEL,OAAO,EAAE,CAAX;QAAcC,KAAK,EAAE;MAArB,CAXX,EAWqC;QAAEK,MAAM,EAAE;MAAV,CAXrC,EAYGT,KAZH,CAYS,CAZT,CALJ,EAmBGJ,KAnBH;IAoBD;EACF,CAhCM,CAkCP;;AAlCO,CAAT","sourceRoot":"/","sourcesContent":["const t = cc.tween;\n\ncc.Class({\n  extends: cc.Component,\n\n  properties: {\n    nodes: [cc.Node]\n  },\n\n  start () {\n    let nodes = this.nodes;\n    for (let i = 0; i < nodes.length; i++) {\n      let node = nodes[i];\n      t(node)\n        // The defference delay should only eval once\n        .delay(0.5 + i * 0.2)\n        // repeat 1000 times\n        .repeat(1000,\n          t()\n            // first reset node properties\n            .set({ opacity: 0, scale: 10, x: 0, rotation: 0 })\n            // parallel exec tween\n            .parallel(\n              t().to(1, { opacity: 255, scale: 1 }, { easing: 'quintInOut' }),\n              t().to(2.5, { x: node.x }, { easing: 'backOut' })\n            )\n            .delay(0.5)\n            .to(0.8, { rotation: 360 }, { easing: 'cubicInOut' })\n            .delay(1)\n            .to(0.3, { opacity: 0, scale: 3 }, { easing: \"quintIn\" })\n            .delay(1)\n        )\n        .start()\n    }\n  },\n\n  // update (dt) {},\n});\n"]}