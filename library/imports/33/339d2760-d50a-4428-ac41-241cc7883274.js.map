{"version":3,"sources":["assets/cases/collider/Platform/HeroControl.js"],"names":["cc","Class","Component","properties","speed","v2","maxSpeed","gravity","drag","direction","jumpSpeed","_lastSpeedY","onLoad","systemEvent","on","SystemEvent","EventType","KEY_DOWN","onKeyPressed","KEY_UP","onKeyReleased","collisionX","collisionY","jumping","prePosition","preStep","touchingNumber","onEnable","director","getCollisionManager","enabled","enabledDebugDraw","onDisable","event","keyCode","macro","KEY","a","left","d","right","w","up","y","onCollisionEnter","other","self","node","color","Color","RED","otherAabb","world","aabb","otherPreAabb","preAabb","clone","selfAabb","selfPreAabb","x","Intersection","rectRect","xMax","parent","xMin","width","touchingX","yMax","yMin","height","touchingY","onCollisionStay","group","motion","getComponent","_movedDiff","onCollisionExit","WHITE","update","dt","Math","abs"],"mappings":"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","sourceRoot":"/","sourcesContent":["cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        speed: cc.v2(0, 0),\n        maxSpeed: cc.v2(2000, 2000),\n        gravity: -1000,\n        drag: 1000,\n        direction: 0,\n        jumpSpeed: 300,\n        _lastSpeedY: 0\n    },\n\n    // use this for initialization\n    onLoad: function () {\n        //add keyboard input listener to call turnLeft and turnRight\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyPressed, this);\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_UP, this.onKeyReleased, this);\n\n        this.collisionX = 0;\n        this.collisionY = 0;\n        this.jumping = true;\n\n        this.prePosition = cc.v2();\n        this.preStep = cc.v2();\n\n        this.touchingNumber = 0;\n    },\n\n    onEnable: function () {\n        cc.director.getCollisionManager().enabled = true;\n        cc.director.getCollisionManager().enabledDebugDraw = true;\n    },\n\n    onDisable: function () {\n        cc.director.getCollisionManager().enabled = false;\n        cc.director.getCollisionManager().enabledDebugDraw = false;\n    },\n    \n    onKeyPressed: function (event) {\n        let keyCode = event.keyCode;\n        switch(keyCode) {\n            case cc.macro.KEY.a:\n            case cc.macro.KEY.left:\n                this.direction = -1;\n                break;\n            case cc.macro.KEY.d:\n            case cc.macro.KEY.right:\n                this.direction = 1;\n                break;\n            case cc.macro.KEY.w:\n            case cc.macro.KEY.up:\n                if (!this.jumping) {\n                    this.jumping = true;\n                    this.speed.y = this.jumpSpeed > this.maxSpeed.y ? this.maxSpeed.y : this.jumpSpeed;    \n                    this._lastSpeedY = this.jumpSpeed > this.maxSpeed.y ? this.maxSpeed.y : this.jumpSpeed;    \n                }\n                break;\n        }\n    },\n    \n    onKeyReleased: function (event) {\n        let keyCode = event.keyCode;\n        switch(keyCode) {\n            case cc.macro.KEY.a:\n            case cc.macro.KEY.left:\n            case cc.macro.KEY.d:\n            case cc.macro.KEY.right:\n                this.direction = 0;\n                break;\n        }\n    },\n    \n    onCollisionEnter: function (other, self) {\n        this.node.color = cc.Color.RED;\n\n        this.touchingNumber ++;\n        \n        // 1st step \n        // get pre aabb, go back before collision\n        var otherAabb = other.world.aabb;\n        var otherPreAabb = other.world.preAabb.clone();\n\n        var selfAabb = self.world.aabb;\n        var selfPreAabb = self.world.preAabb.clone();\n\n        // 2nd step\n        // forward x-axis, check whether collision on x-axis\n        selfPreAabb.x = selfAabb.x;\n        otherPreAabb.x = otherAabb.x;\n\n        if (cc.Intersection.rectRect(selfPreAabb, otherPreAabb)) {\n            if (this.speed.x < 0 && (selfPreAabb.xMax > otherPreAabb.xMax)) {\n                this.node.x = otherPreAabb.xMax - this.node.parent.x;\n                this.collisionX = -1;\n            }\n            else if (this.speed.x > 0 && (selfPreAabb.xMin < otherPreAabb.xMin)) {\n                this.node.x = otherPreAabb.xMin - selfPreAabb.width - this.node.parent.x;\n                this.collisionX = 1;\n            }\n\n            this.speed.x = 0;\n            other.touchingX = true;\n            return;\n        }\n\n        // 3rd step\n        // forward y-axis, check whether collision on y-axis\n        selfPreAabb.y = selfAabb.y;\n        otherPreAabb.y = otherAabb.y;\n\n        if (cc.Intersection.rectRect(selfPreAabb, otherPreAabb)) {\n            if (this.speed.y < 0 && (selfPreAabb.yMax > otherPreAabb.yMax)) {\n                this.node.y = otherPreAabb.yMax - this.node.parent.y;\n                this.jumping = false;\n                this.collisionY = -1;\n            }\n            else if (this.speed.y > 0 && (selfPreAabb.yMin < otherPreAabb.yMin)) {\n                this.node.y = otherPreAabb.yMin - selfPreAabb.height - this.node.parent.y;\n                this.collisionY = 1;\n            }\n            \n            this.speed.y = 0;\n            this._lastSpeedY = 0;\n            other.touchingY = true;\n        }    \n        \n    },\n    \n    onCollisionStay: function (other, self) {\n        if (this.collisionY === -1) {\n            if (other.node.group === 'Platform') {\n                var motion = other.node.getComponent('PlatformMotion');\n                if (motion) {\n                    this.node.x += motion._movedDiff;\n                }\n            }\n\n            // this.node.y = other.world.aabb.yMax;\n\n            // var offset = cc.v2(other.world.aabb.x - other.world.preAabb.x, 0);\n            \n            // var temp = cc.affineTransformClone(self.world.transform);\n            // temp.tx = temp.ty = 0;\n            \n            // offset = cc.pointApplyAffineTransform(offset, temp);\n            // this.node.x += offset.x;\n        }\n    },\n    \n    onCollisionExit: function (other) {\n        this.touchingNumber --;\n        if (this.touchingNumber === 0) {\n            this.node.color = cc.Color.WHITE;\n        }\n\n        if (other.touchingX) {\n            this.collisionX = 0;\n            other.touchingX = false;\n        }\n        else if (other.touchingY) {\n            other.touchingY = false;\n            this.collisionY = 0;\n            this.jumping = true;\n        }\n    },\n\n    update: function (dt) {\n        if (this.jumping) {\n            this.speed.y += this.gravity * dt;\n            if (Math.abs(this.speed.y) > this.maxSpeed.y) {\n                this.speed.y = this.speed.y > 0 ? this.maxSpeed.y : -this.maxSpeed.y;\n            }\n        }\n\n        if (this.direction === 0) {\n            if (this.speed.x > 0) {\n                this.speed.x -= this.drag * dt;\n                if (this.speed.x <= 0) this.speed.x = 0;\n            }\n            else if (this.speed.x < 0) {\n                this.speed.x += this.drag * dt;\n                if (this.speed.x >= 0) this.speed.x = 0;\n            }\n        }\n        else {\n            this.speed.x += (this.direction > 0 ? 1 : -1) * this.drag * dt;\n            if (Math.abs(this.speed.x) > this.maxSpeed.x) {\n                this.speed.x = this.speed.x > 0 ? this.maxSpeed.x : -this.maxSpeed.x;\n            }\n        }\n\n        if (this.speed.x * this.collisionX > 0) {\n            this.speed.x = 0;\n        }\n        \n        this.prePosition.x = this.node.x;\n        this.prePosition.y = this.node.y;\n\n        this.preStep.x = this.speed.x * dt;\n        this.preStep.y = this.speed.y * dt;\n        \n        this.node.x += this.speed.x * dt;\n        if (this._lastSpeedY === 0 || this.speed.y === 0 || this._lastSpeedY / Math.abs(this._lastSpeedY) === this.speed.y / Math.abs(this.speed.y)) {\n            this.node.y += (this._lastSpeedY + this.speed.y) * dt / 2;\n        }\n        else {\n            this.node.y +=  - this._lastSpeedY / this.gravity / 2 * this._lastSpeedY + this.speed.y / this.gravity / 2 * this.speed.y; \n        } \n\n        this._lastSpeedY = this.speed.y;\n    },\n});\n"]}