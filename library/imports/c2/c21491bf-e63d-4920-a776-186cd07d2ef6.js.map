{"version":3,"sources":["assets/cases/05_scripting/11_pool/NodeGenerator.js"],"names":["cc","Class","Component","properties","prefab","Prefab","hint","Label","regionOrigin","Vec2","regionSize","Size","onLoad","schedule","generateNode","_pool","NodePool","_count","monster","get","instantiate","string","addComponent","x","Math","floor","random","width","y","height","angle","PI","dx","cos","dy","sin","runAction","sequence","moveBy","callFunc","removeNode","node","addChild","sender","put"],"mappings":";;;;;;AAAAA,EAAE,CAACC,KAAH,CAAS;EACL,WAASD,EAAE,CAACE,SADP;EAGLC,UAAU,EAAE;IACRC,MAAM,EAAEJ,EAAE,CAACK,MADH;IAERC,IAAI,EAAEN,EAAE,CAACO,KAFD;IAGRC,YAAY,EAAER,EAAE,CAACS,IAHT;IAIRC,UAAU,EAAEV,EAAE,CAACW;EAJP,CAHP;EAUL;EACAC,MAAM,EAAE,kBAAY;IAChB,KAAKC,QAAL,CAAc,KAAKC,YAAnB,EAAiC,CAAjC;IACA,KAAKC,KAAL,GAAa,IAAIf,EAAE,CAACgB,QAAP,CAAgB,aAAhB,CAAb;IACA,KAAKC,MAAL,GAAc,CAAd;EACH,CAfI;EAiBLH,YAAY,EAAE,wBAAY;IACtB,IAAII,OAAO,GAAG,KAAKH,KAAL,CAAWI,GAAX,EAAd;;IACA,IAAI,CAACD,OAAL,EAAc;MACVA,OAAO,GAAGlB,EAAE,CAACoB,WAAH,CAAe,KAAKhB,MAApB,CAAV;MACA,KAAKa,MAAL;MACA,KAAKX,IAAL,CAAUe,MAAV,GAAmB,mBAAmB,KAAKJ,MAA3C,CAHU,CAKV;;MACAC,OAAO,CAACI,YAAR,CAAqB,aAArB;IACH;;IACDJ,OAAO,CAACK,CAAR,GAAY,KAAKf,YAAL,CAAkBe,CAAlB,GAAsBC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,KAAKhB,UAAL,CAAgBiB,KAA3C,CAAlC;IACAT,OAAO,CAACU,CAAR,GAAY,KAAKpB,YAAL,CAAkBoB,CAAlB,GAAsBJ,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,KAAKhB,UAAL,CAAgBmB,MAA3C,CAAlC;IAEA,IAAIC,KAAK,GAAGN,IAAI,CAACE,MAAL,KAAgBF,IAAI,CAACO,EAArB,GAA0B,CAAtC;IACA,IAAIC,EAAE,GAAG,MAAMR,IAAI,CAACS,GAAL,CAASH,KAAT,CAAf;IACA,IAAII,EAAE,GAAG,MAAMV,IAAI,CAACW,GAAL,CAASL,KAAT,CAAf;IAEAZ,OAAO,CAACkB,SAAR,CAAkBpC,EAAE,CAACqC,QAAH,CACdrC,EAAE,CAACsC,MAAH,CAAU,CAAV,EAAaN,EAAb,EAAiBE,EAAjB,CADc,EAEdlC,EAAE,CAACuC,QAAH,CAAY,KAAKC,UAAjB,EAA6B,IAA7B,EAAmCtB,OAAnC,CAFc,CAAlB;IAKA,KAAKuB,IAAL,CAAUC,QAAV,CAAmBxB,OAAnB;EACH,CAxCI;EA0CLsB,UAAU,EAAE,oBAAUG,MAAV,EAAkBzB,OAAlB,EAA2B;IACnC,KAAKH,KAAL,CAAW6B,GAAX,CAAe1B,OAAf;EACH;AA5CI,CAAT","sourceRoot":"/","sourcesContent":["cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        prefab: cc.Prefab,\n        hint: cc.Label,\n        regionOrigin: cc.Vec2,\n        regionSize: cc.Size\n    },\n\n    // use this for initialization\n    onLoad: function () {\n        this.schedule(this.generateNode, 2);\n        this._pool = new cc.NodePool('PoolHandler');\n        this._count = 0;\n    },\n    \n    generateNode: function () {\n        var monster = this._pool.get();\n        if (!monster) {\n            monster = cc.instantiate(this.prefab);\n            this._count++;\n            this.hint.string = 'Node Created: ' + this._count;\n        \n            // Add pool handler component which will control the touch event\n            monster.addComponent('PoolHandler');\n        }\n        monster.x = this.regionOrigin.x + Math.floor(Math.random() * this.regionSize.width);\n        monster.y = this.regionOrigin.y + Math.floor(Math.random() * this.regionSize.height);\n        \n        var angle = Math.random() * Math.PI * 2;\n        var dx = 500 * Math.cos(angle);\n        var dy = 500 * Math.sin(angle);\n        \n        monster.runAction(cc.sequence(\n            cc.moveBy(5, dx, dy),\n            cc.callFunc(this.removeNode, this, monster)\n        ));\n        \n        this.node.addChild(monster);\n    },\n    \n    removeNode: function (sender, monster) {\n        this._pool.put(monster);\n    }\n});\n"]}