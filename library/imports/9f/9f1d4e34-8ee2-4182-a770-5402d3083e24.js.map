{"version":3,"sources":["assets/cases/03_gameplay/02_actions/SequenceAction/SequenceAction.js"],"names":["cc","Class","Component","properties","label","type","Label","start","startTime","eachTime","sequence1","sequence","moveBy","v2","repeat","sequence2","node","runAction","callFunc","Date","now","difference","Math","abs","string","toFixed","color"],"mappings":";;;;;;AAAAA,EAAE,CAACC,KAAH,CAAS;EACL,WAASD,EAAE,CAACE,SADP;EAGLC,UAAU,EAAE;IACTC,KAAK,EAAE;MACH,WAAS,IADN;MAEHC,IAAI,EAAEL,EAAE,CAACM;IAFN;EADE,CAHP;EAULC,KAVK,mBAUI;IAAA;;IACL,IAAIC,SAAS,GAAG,CAAhB;IACA,IAAMC,QAAQ,GAAG,GAAjB;IAEA,IAAIC,SAAS,GAAGV,EAAE,CAACW,QAAH,CACZX,EAAE,CAACY,MAAH,CAAUH,QAAV,EAAoBT,EAAE,CAACa,EAAH,CAAM,CAAN,EAAS,CAAC,GAAV,CAApB,CADY,EAEZb,EAAE,CAACY,MAAH,CAAUH,QAAQ,GAAG,CAArB,EAAwBT,EAAE,CAACa,EAAH,CAAM,CAAN,EAAS,GAAT,CAAxB,CAFY,EAGdC,MAHc,CAGP,CAHO,CAAhB;IAKA,IAAIC,SAAS,GAAGf,EAAE,CAACW,QAAH,CACZX,EAAE,CAACY,MAAH,CAAUH,QAAV,EAAoBT,EAAE,CAACa,EAAH,CAAM,CAAN,EAAS,CAAC,GAAV,CAApB,CADY,EAEZb,EAAE,CAACY,MAAH,CAAUH,QAAV,EAAoBT,EAAE,CAACa,EAAH,CAAM,CAAN,EAAS,GAAT,CAApB,CAFY,EAGdC,MAHc,CAGP,CAHO,CAAhB;IAKA,KAAKE,IAAL,CAAUC,SAAV,CACIjB,EAAE,CAACW,QAAH,CACIX,EAAE,CAACkB,QAAH,CAAY,YAAM;MACdV,SAAS,GAAGW,IAAI,CAACC,GAAL,EAAZ;IACH,CAFD,CADJ,EAIIV,SAJJ,EAKIK,SALJ,EAMIf,EAAE,CAACkB,QAAH,CAAY,YAAM;MACd,IAAIG,UAAU,GAAGC,IAAI,CAACC,GAAL,CAASJ,IAAI,CAACC,GAAL,KAAaZ,SAAtB,IAAmC,IAApD;;MACA,IAAIa,UAAU,GAAGZ,QAAQ,GAAG,CAAxB,IAA6B,IAAjC,EAAuC;QACnC,KAAI,CAACL,KAAL,CAAWoB,MAAX,GAAoB,0BAA0BH,UAAU,CAACI,OAAX,CAAmB,CAAnB,CAA9C;QACA,KAAI,CAACrB,KAAL,CAAWY,IAAX,CAAgBU,KAAhB,GAAwB1B,EAAE,CAAC0B,KAAH,CAAS,GAAT,EAAa,CAAb,EAAe,CAAf,CAAxB;MACH,CAHD,MAIK;QACD,KAAI,CAACtB,KAAL,CAAWoB,MAAX,GAAoB,2BAA2BH,UAAU,CAACI,OAAX,CAAmB,CAAnB,CAA/C;QACA,KAAI,CAACrB,KAAL,CAAWY,IAAX,CAAgBU,KAAhB,GAAwB1B,EAAE,CAAC0B,KAAH,CAAS,CAAT,EAAW,GAAX,EAAe,CAAf,CAAxB;MACH;IACJ,CAVD,CANJ,CADJ;EAoBH;AA5CI,CAAT","sourceRoot":"/","sourcesContent":["cc.Class({\n    extends: cc.Component,\n\n    properties: {\n       label: {\n           default: null,\n           type: cc.Label\n       },\n    },\n\n    start () {\n        var startTime = 0; \n        const eachTime = 0.5;\n\n        let sequence1 = cc.sequence(\n            cc.moveBy(eachTime, cc.v2(0, -300)),\n            cc.moveBy(eachTime / 2, cc.v2(0, 300)),\n        ).repeat(2);\n\n        let sequence2 = cc.sequence(\n            cc.moveBy(eachTime, cc.v2(0, -200)),\n            cc.moveBy(eachTime, cc.v2(0, 200)),\n        ).repeat(2);\n\n        this.node.runAction(\n            cc.sequence(\n                cc.callFunc(() => {\n                    startTime = Date.now();\n                }),\n                sequence1,\n                sequence2,\n                cc.callFunc(() => {\n                    var difference = Math.abs(Date.now() - startTime) / 1000;\n                    if (difference - eachTime * 7 >= 0.05) {\n                        this.label.string = \"Failed - ElapseTime: \" + difference.toFixed(1);\n                        this.label.node.color = cc.color(255,0,0);\n                    }\n                    else {\n                        this.label.string = \"Succeed - ElapseTime: \" + difference.toFixed(1);\n                        this.label.node.color = cc.color(0,255,0);\n                    } \n                })\n            )\n        );\n    }\n});\n"]}