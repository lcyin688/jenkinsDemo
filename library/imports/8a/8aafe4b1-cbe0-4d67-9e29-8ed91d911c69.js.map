{"version":3,"sources":["assets/cases/02_ui/02_label/LabelAttributes.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\n\nconst { ccclass, property } = cc._decorator;\n\ninterface AniBase {\n    attr?:string;\n    stay:number;\n    duration: number;\n}\n\ninterface AniRange extends AniBase{\n    from: number;\n    to: number;\n    step: number;\n}\ninterface AniEnum extends AniBase{\n    values: any[];\n    callback?:(v)=>void|any;\n}\ninterface AniCallback extends AniBase{\n    update: (p: number, f, t) => any|void;\n    before?: (f, t) => any|void;\n    after?: (f, t) => any|void;\n    from:any;\n    to: any;\n    interval: number;\n    _time?:number;\n}\n\ninterface LabelAttrAnimation<T> {\n    loop: boolean;\n    list: (AniRange | AniEnum | AniCallback)[];\n}\n\n@ccclass\nexport default class NewClass extends cc.Component {\n\n    @property(cc.Label)\n    label_size: cc.Label = null;\n\n    @property(cc.Label)\n    label_color: cc.Label = null;\n\n    @property(cc.Label)\n    label_align: cc.Label = null;\n\n    @property(cc.Label)\n    label_lineheight: cc.Label = null;\n\n    @property(cc.Label)\n    label_effects: cc.Label = null;\n\n    @property(cc.Label)\n    label_overflow: cc.Label = null;\n\n    @property\n    text: string = 'hello';\n\n    // LIFE-CYCLE CALLBACKS:\n\n    // onLoad () {}\n\n\n\n    schedule_attributes<T>(label: cc.Label, ani: LabelAttrAnimation<T>, idx?: number) {\n\n        if (typeof idx === \"undefined\") {\n            idx = 0;\n        }\n\n        if (!!!ani.list[idx]) {\n            return;\n        }\n\n        let cfg = ani.list[idx];\n        if (\"step\" in cfg) {\n            let array = [];\n            for (let v = cfg.from; v < cfg.to; v += cfg.step) {\n                let delay = cfg.duration * (v - cfg.from) / (cfg.to - cfg.from);\n                this.scheduleOnce(() => {\n                    if(cfg.attr) {\n                        label[cfg.attr] = v;\n                    }\n                }, delay)\n            }\n            let lastValue = cfg.to;\n            this.scheduleOnce(() => {\n                if(cfg.attr) {\n                    label[cfg.attr] = lastValue;\n                }\n            }, cfg.duration);\n\n            this.scheduleOnce(() => {\n                if (ani.loop) {\n                    idx = (idx + 1) % ani.list.length;\n                } else {\n                    idx += 1;\n                }\n                this.schedule_attributes(label, ani, idx);\n            }, cfg.duration + cfg.step)\n        } else if (\"values\" in cfg) {\n            let step = cfg.duration / cfg.values.length;\n            let vs = cfg.values;\n            let cb = cfg.callback;\n            for (let i = 0; i < cfg.values.length; i++) {\n                this.scheduleOnce(() => {\n                    if(cfg.attr){\n                        label[cfg.attr] = vs[i];\n                    }\n                    if(cb) cb(vs[i]);\n                }, i * step);\n            }\n            this.scheduleOnce(() => {\n                if(cfg.attr)\n                    label[cfg.attr] = vs[vs.length - 1];\n                if(cb)\n                    cb(vs[vs.length -1]);\n            }, cfg.duration);\n\n            this.scheduleOnce(() => {\n                if (ani.loop) {\n                    idx = (idx + 1) % ani.list.length;\n                } else {\n                    idx += 1;\n                }\n                this.schedule_attributes(label, ani, idx);\n            }, cfg.duration + cfg.stay);\n        } else if (\"update\" in cfg) {\n\n            if(cfg._time == undefined && cfg.before) {\n                let ret = cfg.before(cfg.from, cfg.to);\n                if(ret!=undefined && cfg.attr) {\n                    label[cfg.attr] = ret;\n                }\n                cfg._time = 1;\n            }\n\n            let times = Math.floor(cfg.duration / cfg.interval);\n            let i = 0;\n            let updatecb = cfg.update;\n            let from = cfg.from;\n            let to = cfg.to;\n            let after = cfg.after;\n            this.schedule(() => {\n                let ret = updatecb(i / times, from, to);\n                if(ret != undefined && cfg.attr)\n                    label[cfg.attr] = ret;\n                i+=1;\n                if(i >= times) {\n                    if(after) after(from, to);\n                    delete (cfg as any)._time;\n                }\n            }, cfg.interval, times , 0);\n            this.scheduleOnce(() => {\n                if (ani.loop) {\n                    idx = (idx + 1) % ani.list.length;\n                } else {\n                    idx += 1;\n                }\n                this.schedule_attributes(label, ani, idx);\n            }, cfg.duration + cfg.stay);\n        }\n    }\n\n    start() {\n        this.setup_fontsize();\n        this.setup_font_color();\n        this.setup_label_align();\n        this.setup_line_height();\n        this.setup_label_decoration();\n        this.setup_label_overflow();\n    }\n\n    setup_fontsize() {\n        let label = \"Update FontSize/Anchor\";\n        this.label_size.string = label;\n        let label_size = this.label_size;\n        this.schedule_attributes(this.label_size, {\n            loop: true,\n            list: [\n            {\n                attr: \"fontSize\",\n                values: [25, 10, 30, 22],\n                duration: 3,\n                stay: 1\n            }, \n            {\n                from: new cc.Vec2(0, 0),\n                to: new cc.Vec2(1, 1),\n                update: (p, f, t) => {\n                    let x = f.x * (1 - p) + p * t.y;\n                    let y = f.y * (1 - p) + p * t.y;\n                    label_size.node.setAnchorPoint(x, y);\n                    label_size.string = \"Update Node Anchor: \" +x.toFixed(2) +\", \"+y.toFixed(2);\n                },\n                duration: 3,\n                stay: 1,\n                interval: 0.2,\n                before :(f, t)=> {\n                    label_size.string = \"Update Node Anchor\";\n                },\n                after: (f, t)=>{\n                    label_size.string = label;\n                    label_size.node.setAnchorPoint(0.5, 0.5);\n                }\n            }]\n        });\n    }\n\n    setup_font_color() {\n        let label = \"Update Font Color\";\n        this.label_color.string = label;\n        let label_color = this.label_color;\n        let old_color = label_color.node.color;\n        this.schedule_attributes(this.label_color, {\n            loop: true,\n            list: [{\n                from: new cc.Color(255, 0, 0),\n                to: new cc.Color(255, 255, 0),\n                update: (p, f, t) => {\n                    let r = f.getR() * (1 - p) + p * t.getR();\n                    let g = f.getG() * (1 - p) + p * t.getG();\n                    let b = f.getB() * (1 - p) + p * t.getB();\n                    let c= new cc.Color(r, g, b);\n                    label_color.node.color = c;\n                },\n                duration: 3,\n                stay: 1,\n                interval: 0.1,\n                before :(f, t)=> {\n                    label_color.string = \"Update Node Color\";\n                    label_color.node.color = old_color;\n                    label_color.node.opacity = 255;\n                },\n                after: (f, t)=>{\n                    label_color.node.color= old_color;\n                }\n            }, {\n                from: 0,\n                to: 255,\n                update: (p, f, t) => {\n                    label_color.node.opacity = (1-p) * f + t * p;\n                },\n                duration: 3,\n                stay: 1,\n                interval: 0.1,\n                before :(f, t)=> {\n                    label_color.string = \"Update Node Alpha\";\n                    label_color.node.opacity = 255;\n                },\n                after: (f, t)=>{\n                    label_color.node.opacity = 255;\n                }\n            } \n\n        ]\n        });\n    }\n\n    setup_label_align() {\n\n        let label = \"Update Label \\nParamaters\\nLines\";\n        this.label_align.string = label;\n        let label_align = this.label_align;\n\n        this.schedule_attributes(label_align, {\n            loop:true, \n            list: [\n                {\n                    attr: \"horizontalAlign\",\n                    values:[0,1,2],\n                    duration: 3,\n                    stay: 1\n                },\n                {\n                    attr: \"verticalAlign\",\n                    values: [0,1,2],\n                    duration: 3,\n                    stay: 1\n                }\n            ]\n        })\n    }\n\n    setup_line_height() {\n\n        let label = \"Update Label \\Line Height\\nSpaceing x\";\n        this.label_lineheight.string = label;\n        let label_lineheight = this.label_lineheight;\n\n        this.schedule_attributes(label_lineheight, {\n            loop:true, \n            list: [\n                {\n                    attr: \"lineHeight\",\n                    values:[10,20,30],\n                    duration: 3,\n                    stay: 1\n                },\n                {\n                    attr: \"spacingX\",\n                    from: 0,\n                    to: 10, \n                    update: (p, f, t) =>{\n                        return (1 - p) * f + p * t;\n                    },\n                    duration: 3,\n                    stay: 1,\n                    interval: 0.1,\n                    after: function() {\n                        label_lineheight.spacingX = 0;\n                    } \n                }\n            ]\n        });\n    }\n\n    setup_label_decoration() {\n        let label = \"Update Label \\LDecoration\";\n        this.label_effects.string = label;\n        let label_effects = this.label_effects;\n        label_effects.fontSize = 20;\n        label_effects.horizontalAlign = cc.Label.HorizontalAlign.LEFT;\n        let values =[];\n        for(let i = 0; i<= (1 << 2); i++) {\n            values.push(\n                {\n                    enableItalic : ((i>>0) & 0x1) == 1,\n                    enableUnderline : ((i>>1) & 0x1) == 1,\n                   // enableBold : ((i >> 2) & 0x1) == 1,\n                }\n            )\n        }\n\n        this.schedule_attributes(label_effects, {\n            loop:true, \n            list: [\n                {\n                    values:values,\n                    duration: 8,\n                    stay: 1,\n                    callback: (value) =>{\n                       // label_effects.enableItalic = value.enableBold;\n                        label_effects.enableBold = value.enableBold;\n                        label_effects.enableUnderline = value.enableUnderline;\n                        let tex = [];\n                        for(let k in value) {\n                            tex.push(`${k}: ${value[k]}`);\n                        }\n                        label_effects.string = tex.join(\"\\n\");\n                    }\n                },\n            ]\n        });\n    }\n\n\n    setup_label_overflow() {\n        let label = \"Update Label \\nOverFlow\\nLong Line Text\\n\";\n        this.label_overflow.string = label;\n        let label_overflow = this.label_overflow;\n        label_overflow.fontSize = 40;\n        let values = [\n            cc.Label.Overflow.NONE,\n            cc.Label.Overflow.CLAMP,\n            cc.Label.Overflow.RESIZE_HEIGHT,\n            cc.Label.Overflow.SHRINK\n        ]\n        this.schedule_attributes(label_overflow, {\n            loop:true, \n            list: [\n                {\n                    attr:\"overflow\",\n                    values:values,\n                    duration: 4,\n                    stay: 1,\n                    callback: (v) =>{\n                        label_overflow.string = label + v;\n                    }\n                },\n            ]\n        });\n    }\n    // update (dt) {}\n}\n"]}