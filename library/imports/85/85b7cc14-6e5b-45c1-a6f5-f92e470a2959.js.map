{"version":3,"sources":["assets/cases/3d/mesh.js"],"names":["chroma","require","gfx","cc","Class","Component","editor","executeInEditMode","properties","start","lighten","lightenDirection","c1","color","c2","vfmtPosColor","VertexFormat","name","ATTR_POSITION","type","ATTR_TYPE_FLOAT32","num","ATTR_COLOR","ATTR_TYPE_UINT8","normalize","mesh","Mesh","init","setVertices","v3","_minPos","_maxPos","updateColor","Color","RED","BLUE","setIndices","renderer","node","getComponent","MeshRenderer","addComponent","update","dt","CC_EDITOR","hsl","fromHEX","toString"],"mappings":"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","sourceRoot":"/","sourcesContent":["const chroma = require('chroma');\n\nlet gfx = cc.gfx;\n\ncc.Class({\n    extends: cc.Component,\n\n    editor: {\n        executeInEditMode: true\n    },\n\n    properties: {\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    // onLoad () {},\n\n    start () {\n        this.lighten = 0;\n        this.lightenDirection = 1;\n        this.c1 = cc.color();\n        this.c2 = cc.color();\n\n        var vfmtPosColor = new gfx.VertexFormat([\n            { name: gfx.ATTR_POSITION, type: gfx.ATTR_TYPE_FLOAT32, num: 3 },\n            { name: gfx.ATTR_COLOR, type: gfx.ATTR_TYPE_UINT8, num: 4, normalize: true },\n        ]);\n        \n        let mesh = new cc.Mesh();\n        mesh.init(vfmtPosColor, 8, true);\n        this.mesh = mesh;\n        \n        mesh.setVertices(gfx.ATTR_POSITION, [\n            cc.v3(-100, 100, 100), cc.v3(-100, -100, 100), cc.v3(100, 100, 100), cc.v3(100, -100, 100),\n            cc.v3(-100, 100, -100), cc.v3(-100, -100, -100), cc.v3(100, 100, -100), cc.v3(100, -100, -100)\n        ]);\n\n        mesh._minPos = cc.v3(-100, -100, -100);\n        mesh._maxPos = cc.v3(100, 100, 100);\n\n        this.updateColor(cc.Color.RED, cc.Color.BLUE);\n\n        mesh.setIndices([\n            0, 1, 2, 1, 3, 2, // front\n            0, 6, 4, 0, 2, 6, // top\n            2, 7, 6, 2, 3, 7, // right\n            0, 5, 4, 0, 1, 5, // left\n            1, 7, 5, 1, 3, 7, // bottm,\n            4, 5, 6, 5, 7, 6, // back\n        ]);\n\n        let renderer = this.node.getComponent(cc.MeshRenderer);\n        if (!renderer) {\n            renderer = this.node.addComponent(cc.MeshRenderer);\n        }\n        renderer.mesh = mesh;\n    },\n\n    updateColor (c1, c2) {\n        this.mesh.setVertices(gfx.ATTR_COLOR, [\n            c1, c1, c1, c1,\n            c2, c2, c2, c2,\n        ]);\n    },\n\n    update (dt) {\n        if (CC_EDITOR) return;\n\n        let c1 = chroma.hsl(330, 1, this.lighten);\n        let c2 = chroma.hsl(100, 1, (1-this.lighten));\n\n        this.lighten += dt * 0.1 * this.lightenDirection;\n        if ((this.lighten > 1 && this.lightenDirection > 0) || \n            (this.lighten < 0 && this.lightenDirection < 0)) {\n            this.lightenDirection *= -1;\n        }\n        \n        this.c1.fromHEX(c1.toString());\n        this.c2.fromHEX(c2.toString());\n        this.updateColor(this.c1, this.c2);\n    },\n});\n"]}