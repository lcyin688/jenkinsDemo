{"version":3,"sources":["assets/cases/spine/VertexEffect.js"],"names":["cc","Class","Component","properties","skeleton","type","sp","Skeleton","start","_swirlTime","_maxEffect","_index","_bound","size","node","width","height","_swirlEffect","VertexEffectDelegate","initSwirlWithPowOut","_jitterEffect","initJitter","switchEffect","setVertexEffectDelegate","update","dt","percent","bound","swirlEffect","getSwirlVertexEffect","angle","centerX","centerY","radius","Math","sqrt"],"mappings":";;;;;;AAAAA,EAAE,CAACC,KAAH,CAAS;EACL,WAASD,EAAE,CAACE,SADP;EAGLC,UAAU,EAAE;IACRC,QAAQ,EAAG;MACPC,IAAI,EAAEC,EAAE,CAACC,QADF;MAEP,WAAS;IAFF;EADH,CAHP;EAULC,KAVK,mBAUI;IACL,KAAKC,UAAL,GAAkB,CAAlB;IACA,KAAKC,UAAL,GAAkB,CAAlB;IACA,KAAKC,MAAL,GAAc,CAAd;IACA,KAAKC,MAAL,GAAcZ,EAAE,CAACa,IAAH,CAAQ,KAAKT,QAAL,CAAcU,IAAd,CAAmBC,KAA3B,EAAkC,KAAKX,QAAL,CAAcU,IAAd,CAAmBE,MAArD,CAAd;IAEA,KAAKC,YAAL,GAAoB,IAAIX,EAAE,CAACY,oBAAP,EAApB;;IACA,KAAKD,YAAL,CAAkBE,mBAAlB,CAAsC,CAAtC,EAAyC,CAAzC;;IAEA,KAAKC,aAAL,GAAqB,IAAId,EAAE,CAACY,oBAAP,EAArB;;IACA,KAAKE,aAAL,CAAmBC,UAAnB,CAA8B,EAA9B,EAAkC,EAAlC;EACH,CArBI;EAuBLC,YAvBK,0BAuBW;IACZ,KAAKX,MAAL;;IACA,IAAI,KAAKA,MAAL,IAAe,KAAKD,UAAxB,EAAoC;MAChC,KAAKC,MAAL,GAAc,CAAd;IACH;;IAED,QAAQ,KAAKA,MAAb;MACI,KAAK,CAAL;QACI,KAAKP,QAAL,CAAcmB,uBAAd,CAAsC,IAAtC;QACA;;MACJ,KAAK,CAAL;QACI,KAAKnB,QAAL,CAAcmB,uBAAd,CAAsC,KAAKH,aAA3C;QACA;;MACJ,KAAK,CAAL;QACI,KAAKhB,QAAL,CAAcmB,uBAAd,CAAsC,KAAKN,YAA3C;QACA;IATR;EAWH,CAxCI;EA0CLO,MA1CK,kBA0CGC,EA1CH,EA0CO;IACR,IAAI,KAAKd,MAAL,IAAe,CAAnB,EAAsB;MAClB,KAAKF,UAAL,IAAmBgB,EAAnB;MACA,IAAIC,OAAO,GAAG,KAAKjB,UAAL,GAAkB,CAAhC;MACA,IAAIiB,OAAO,GAAG,CAAd,EAAiBA,OAAO,GAAG,KAAKA,OAAO,GAAE,CAAd,CAAV;MAEjB,IAAIC,KAAK,GAAG,KAAKf,MAAjB;;MACA,IAAIgB,WAAW,GAAG,KAAKX,YAAL,CAAkBY,oBAAlB,EAAlB;;MACAD,WAAW,CAACE,KAAZ,GAAoB,MAAMJ,OAA1B;MACAE,WAAW,CAACG,OAAZ,GAAsBJ,KAAK,CAACZ,KAAN,GAAc,GAApC;MACAa,WAAW,CAACI,OAAZ,GAAsBL,KAAK,CAACX,MAAN,GAAe,GAArC;MAEAY,WAAW,CAACK,MAAZ,GAAqBP,OAAO,GAAGQ,IAAI,CAACC,IAAL,CAAUR,KAAK,CAACZ,KAAN,GAAcY,KAAK,CAACZ,KAApB,GAA4BY,KAAK,CAACX,MAAN,GAAeW,KAAK,CAACX,MAA3D,CAA/B;IACH;EACJ;AAxDI,CAAT","sourceRoot":"/","sourcesContent":["cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        skeleton : {\n            type: sp.Skeleton,\n            default: null,\n        }\n    },\n\n    start () {\n        this._swirlTime = 0;\n        this._maxEffect = 3;\n        this._index = 0;\n        this._bound = cc.size(this.skeleton.node.width, this.skeleton.node.height);\n\n        this._swirlEffect = new sp.VertexEffectDelegate();\n        this._swirlEffect.initSwirlWithPowOut(0, 2);\n\n        this._jitterEffect = new sp.VertexEffectDelegate();\n        this._jitterEffect.initJitter(20, 20);\n    },\n\n    switchEffect () {\n        this._index++;\n        if (this._index >= this._maxEffect) {\n            this._index = 0;\n        }\n\n        switch (this._index) {\n            case 0:\n                this.skeleton.setVertexEffectDelegate(null);\n                break;\n            case 1:\n                this.skeleton.setVertexEffectDelegate(this._jitterEffect);\n                break;\n            case 2:\n                this.skeleton.setVertexEffectDelegate(this._swirlEffect);\n                break;\n        }\n    },\n\n    update (dt) {\n        if (this._index == 2) {\n            this._swirlTime += dt;\n            let percent = this._swirlTime % 2;\n            if (percent > 1) percent = 1 - (percent -1 );\n\n            let bound = this._bound;\n            let swirlEffect = this._swirlEffect.getSwirlVertexEffect();\n            swirlEffect.angle = 360 * percent;\n            swirlEffect.centerX = bound.width * 0.5;\n            swirlEffect.centerY = bound.height * 0.5;\n\n            swirlEffect.radius = percent * Math.sqrt(bound.width * bound.width + bound.height * bound.height);\n        }    \n    } \n});\n"]}