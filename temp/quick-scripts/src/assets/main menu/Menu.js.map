{"version":3,"sources":["assets/main menu/Menu.js"],"names":["i18n","require","SceneList","TipsManager","MainScene","cc","Class","Component","properties","text","Label","readme","ScrollView","btnInfo","Button","btnBack","testList","uiCamera","Camera","sceneTitle","searchBlock","Node","onLoad","_isLoadingScene","showDebugDraw","game","addPersistRootNode","node","currentSceneUrl","contentPos","active","loadInstruction","storage","getComponent","content","sceneList","init","cocosAnalytics","isInited","CAEvent","onEvent","eventName","director","on","Director","EVENT_AFTER_SCENE_LAUNCH","_onSceneLaunched","url","getCurrentScene","loadScene","cameras","i","l","length","camera","cullingMask","groupIndex","backToList","result","onLoadSceneFinish","bind","setCurrentScene","showReadme","getContentPosition","CALevels","begin","level","isMenu","endsWith","setContentPosition","string","replace","_getAdjacentScenes","res","next","prev","findAvailableScene","startIndex","step","sceneName","path","basename","available","hasSupport","some","item","index","nextScene","prevScene","self","urlArr","split","fileName","resources","load","TextAsset","err","asset","t","event","undefined","scrollToTop","enabledDebugDraw","getCollisionManager","videoPlayer","find","restart","gc","sys","garbageCollect"],"mappings":"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","sourceRoot":"/","sourcesContent":["const i18n = require('i18n');\nconst SceneList = require('SceneList');\nconst TipsManager = require('TipsManager');\n\nconst MainScene = 'TestList.fire';\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        text: cc.Label,\n        readme: cc.ScrollView,\n        btnInfo: cc.Button,\n        btnBack: cc.Button,\n        testList: cc.ScrollView,\n        uiCamera: cc.Camera,\n        sceneTitle: cc.Label,\n        searchBlock: cc.Node\n    },\n\n    onLoad: function () {\n        this._isLoadingScene = false;\n        this.showDebugDraw = false;\n        cc.game.addPersistRootNode(this.node);\n        this.currentSceneUrl = MainScene;\n        this.contentPos = null;\n        this.btnBack.node.active = false;\n        this.loadInstruction(this.currentSceneUrl);\n\n        this.storage = this.node.getComponent('StorageUtil');\n        // keep the search scene list res\n        cc.game.addPersistRootNode(this.searchBlock);\n        cc.game.addPersistRootNode(this.testList.node);\n        if (this.testList && this.testList.content) {\n            // in main scene\n            this.sceneList = this.testList.content.getComponent(SceneList);\n            this.sceneList.init(this);\n        }\n        if (typeof cocosAnalytics !== 'undefined' && cocosAnalytics.isInited && cocosAnalytics.isInited()) {\n            // Cocos Analytics service, to learn more please visit:\n            // https://analytics.cocos.com/docs/\n            cocosAnalytics.CAEvent.onEvent({\n                eventName: \"打开范例\"\n            });\n        }\n\n        cc.director.on(cc.Director.EVENT_AFTER_SCENE_LAUNCH, this._onSceneLaunched, this);\n\n        let url = this.storage.getCurrentScene();\n        if (url) {\n            this.loadScene(url);\n        }\n    },\n\n    _onSceneLaunched () {\n        let cameras = cc.Camera.cameras;\n        for (let i = 0, l = cameras.length; i < l; i++) {\n            let camera = cameras[i];\n            if (camera === this.uiCamera) {\n                camera.cullingMask = 1 << this.node.groupIndex;\n            }\n            else {\n                camera.cullingMask = camera.cullingMask & (~(1 << this.node.groupIndex));\n            }\n        }\n    },\n\n    backToList: function () {\n        this.loadScene(MainScene);\n    },\n\n    loadScene: function (url) {\n        if (this._isLoadingScene) {\n            return;\n        }\n\n        let result = cc.director.loadScene(url, this.onLoadSceneFinish.bind(this));\n        if (!result) {\n            this.storage.setCurrentScene('');\n            return;\n        }\n\n        this._isLoadingScene = true;\n\n        this.showReadme(null, false);\n        this.contentPos = this.testList.getContentPosition();\n\n        this.currentSceneUrl = url;\n\n\n        if (typeof cocosAnalytics !== 'undefined' && cocosAnalytics.isInited && cocosAnalytics.isInited()) {\n            // Cocos Analytics service, to learn more please visit:\n            // https://analytics.cocos.com/docs/\n            cocosAnalytics.CALevels.begin({\n                level: url\n            });\n        }\n    },\n\n    onLoadSceneFinish: function () {\n        let url = this.currentSceneUrl;\n        this.loadInstruction(url);\n        // record the last close scene \n        this.storage.setCurrentScene(url);\n\n        this.testList.node.active = false;\n\n        let isMenu = url.endsWith(MainScene);\n        this.btnBack.node.active = this.sceneTitle.node.active = !isMenu;\n        this.testList.node.active = isMenu;\n        if (isMenu) {\n            if (this.contentPos) {\n                this.testList.setContentPosition(this.contentPos);\n            }\n        }\n        else {\n            this.sceneTitle.string = url.replace('db://assets/cases/', '');\n        }\n\n        this._isLoadingScene = false;\n    },\n\n    _getAdjacentScenes () {\n        let res = { next: '', prev: '' };\n        let sceneList = this.sceneList.sceneList;\n\n        function findAvailableScene (startIndex, step) {\n            for (var i = startIndex; 0 <= i && i < sceneList.length; i += step) {\n                let url = sceneList[i].url;\n                if (url) {\n                    let sceneName = cc.path.basename(url, '.fire');\n                    let available = TipsManager.hasSupport(sceneName, true);\n                    if (available) {\n                        return url;\n                    }\n                }\n            }\n            return MainScene;\n        }\n\n        if (this.currentSceneUrl.endsWith(MainScene)) {\n            res.next = findAvailableScene(0, 1);\n            res.prev = findAvailableScene(sceneList.length - 1, -1);\n        }\n        else {\n            // findIndex\n            let i = -1;\n            sceneList.some((item, index) => {\n                if (item.url === this.currentSceneUrl) {\n                    i = index;\n                    return true;\n                }\n                return false;\n            });\n\n            if (i !== -1) {\n                res.next = findAvailableScene(i + 1, 1);\n                res.prev = findAvailableScene(i - 1, -1);\n            }\n        }\n        return res;\n    },\n\n    nextScene () {\n        let { next } = this._getAdjacentScenes();\n        if (next) {\n            this.loadScene(next);\n        }\n    },\n\n    prevScene () {\n        let { prev } = this._getAdjacentScenes();\n        if (prev) {\n            this.loadScene(prev);\n        }\n    },\n\n    loadInstruction: function (url) {\n        let self = this;\n        let urlArr = url.split('/');\n        let fileName = urlArr[urlArr.length - 1].replace('.fire', '');\n        cc.resources.load('readme/' + fileName, cc.TextAsset, function (err, asset) {\n            if (err) {\n                self.text.string = i18n.t(\"scripts/Global/Menu.js.1\");\n                return;\n            }\n            self.text.string = asset.text;\n        });\n    },\n\n    showReadme: function (event, active) {\n        if (active === undefined) {\n            active = !this.readme.node.active;\n        }\n\n        this.readme.node.active = active;\n        if (active) {\n            this.readme.scrollToTop();\n        }\n\n        // en: fix Collider DebugDraw always displayed on top of the problem.\n        // zh：解决 Collider DebugDraw 一直显示在最上层的问题。\n        var enabledDebugDraw = cc.director.getCollisionManager().enabledDebugDraw;\n        if (this.readme.node.active) {\n            this.showDebugDraw = enabledDebugDraw;\n            cc.director.getCollisionManager().enabledDebugDraw = false;\n        }\n        else {\n            cc.director.getCollisionManager().enabledDebugDraw = this.showDebugDraw;\n        }\n\n        // en: fix Video Player always displayed on top of the problem.\n        // zh：修复 Video Player 一直显示在最上层的问题。\n        var videoPlayer = cc.find('Canvas/VideoPlayer');\n        if (videoPlayer) {\n            videoPlayer.active = !this.readme.node.active;\n        }\n    },\n\n    restart () {\n        cc.game.restart();\n    },\n    \n    gc () {\n        cc.sys.garbageCollect();\n    },\n});\n"]}