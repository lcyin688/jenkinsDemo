{"version":3,"sources":["assets/cases/04_audio/AudioEngineControl.js"],"names":["cc","Class","Component","properties","audio","type","AudioClip","label","Label","_updateLabel","string","audioPool","length","maxNum","onLoad","audioEngine","getMaxAudioInstance","forEach","name","warn","onDestroy","stopAll","removeAudio","id","idx","indexOf","splice","play","push","setFinishCallback","bind","pauseAll","resumeAll"],"mappings":";;;;;;AAAAA,EAAE,CAACC,KAAH,CAAS;EACL,WAASD,EAAE,CAACE,SADP;EAGLC,UAAU,EAAE;IACRC,KAAK,EAAE;MACHC,IAAI,EAAEL,EAAE,CAACM,SADN;MAEH,WAAS;IAFN,CADC;IAMRC,KAAK,EAAE;MACHF,IAAI,EAAEL,EAAE,CAACQ,KADN;MAEH,WAAS;IAFN;EANC,CAHP;EAeLC,YAfK,0BAeW;IACZ,KAAKF,KAAL,CAAWG,MAAX,GAAoB,eAAe,KAAKC,SAAL,CAAeC,MAA9B,GAAuC,KAAvC,GAA+C,KAAKC,MAAxE;EACH,CAjBI;EAmBLC,MAnBK,oBAmBK;IACN,KAAKD,MAAL,GAAcb,EAAE,CAACe,WAAH,CAAeC,mBAAf,EAAd;IACA,KAAKL,SAAL,GAAiB,EAAjB;;IACA,KAAKF,YAAL,GAHM,CAKN;;;IACA,CAAC,WAAD,EAAc,YAAd,EAA4BQ,OAA5B,CAAoC,UAAUC,IAAV,EAAgB;MAChD,IAAI,CAAClB,EAAE,CAACe,WAAH,CAAeG,IAAf,CAAL,EAA2B;QACvBlB,EAAE,CAACmB,IAAH,CAAQ,MAAMD,IAAN,GAAa,gBAArB;MACH;IACJ,CAJD;EAKH,CA9BI;EAgCLE,SAhCK,uBAgCQ;IACTpB,EAAE,CAACe,WAAH,CAAeM,OAAf;EACH,CAlCI;EAoCLC,WApCK,uBAoCQC,EApCR,EAoCY;IACb,IAAIC,GAAG,GAAG,KAAKb,SAAL,CAAec,OAAf,CAAuBF,EAAvB,CAAV;;IACA,IAAIC,GAAG,GAAG,CAAC,CAAX,EAAc;MACV,KAAKb,SAAL,CAAee,MAAf,CAAsBF,GAAtB,EAA2B,CAA3B;IACH;;IACD,KAAKf,YAAL;EACH,CA1CI;EA4CLkB,IA5CK,kBA4CG;IACJ,IAAI,CAAC,KAAKvB,KAAN,IAAe,KAAKO,SAAL,CAAeC,MAAf,KAA0B,KAAKC,MAAlD,EAA0D;IAC1D,IAAIU,EAAE,GAAGvB,EAAE,CAACe,WAAH,CAAeY,IAAf,CAAoB,KAAKvB,KAAzB,EAAgC,KAAhC,EAAuC,CAAvC,CAAT;IACA,KAAKO,SAAL,CAAeiB,IAAf,CAAoBL,EAApB;;IACA,KAAKd,YAAL,GAJI,CAMJ;;;IACAT,EAAE,CAACe,WAAH,CAAec,iBAAf,CAAiCN,EAAjC,EAAqC,KAAKD,WAAL,CAAiBQ,IAAjB,CAAsB,IAAtB,EAA4BP,EAA5B,CAArC;EACH,CApDI;EAsDLF,OAtDK,qBAsDM;IACPrB,EAAE,CAACe,WAAH,CAAeM,OAAf;IACA,KAAKV,SAAL,GAAiB,EAAjB;;IACA,KAAKF,YAAL;EACH,CA1DI;EA4DLsB,QA5DK,sBA4DO;IACR/B,EAAE,CAACe,WAAH,CAAegB,QAAf;EACH,CA9DI;EAgELC,SAhEK,uBAgEQ;IACThC,EAAE,CAACe,WAAH,CAAeiB,SAAf;EACH;AAlEI,CAAT","sourceRoot":"/","sourcesContent":["cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        audio: {\n            type: cc.AudioClip,\n            default: null\n        },\n\n        label: {\n            type: cc.Label,\n            default: null\n        }\n    },\n\n    _updateLabel () {\n        this.label.string = 'Instance: ' + this.audioPool.length + ' / ' + this.maxNum;\n    },\n\n    onLoad () {\n        this.maxNum = cc.audioEngine.getMaxAudioInstance();\n        this.audioPool = [];\n        this._updateLabel();\n\n        // check deprecated\n        ['playMusic', 'playEffect'].forEach(function (name) {\n            if (!cc.audioEngine[name]) {\n                cc.warn('.' + name + ' is not found!');\n            }\n        });\n    },\n\n    onDestroy () {\n        cc.audioEngine.stopAll();\n    },\n\n    removeAudio (id) {\n        var idx = this.audioPool.indexOf(id);\n        if (idx > -1) {\n            this.audioPool.splice(idx, 1);\n        }\n        this._updateLabel();\n    },\n\n    play () {\n        if (!this.audio || this.audioPool.length === this.maxNum) return;\n        var id = cc.audioEngine.play(this.audio, false, 1);\n        this.audioPool.push(id);\n        this._updateLabel();\n\n        // set finish callback\n        cc.audioEngine.setFinishCallback(id, this.removeAudio.bind(this, id));\n    },\n\n    stopAll () {\n        cc.audioEngine.stopAll();\n        this.audioPool = [];\n        this._updateLabel();\n    },\n\n    pauseAll () {\n        cc.audioEngine.pauseAll();\n    },\n\n    resumeAll () {\n        cc.audioEngine.resumeAll();\n    },\n});\n"]}