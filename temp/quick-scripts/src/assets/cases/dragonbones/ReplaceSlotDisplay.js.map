{"version":3,"sources":["assets/cases/dragonbones/ReplaceSlotDisplay.js"],"names":["cc","Class","Component","properties","armatureDisplay","type","dragonBones","ArmatureDisplay","replaceArmatureDisplay","start","node","active","_leftWeaponIndex","_rightDisplayIndex","_rightDisplayNames","_rightDisplayOffset","x","y","left","armature","slot","getSlot","displayIndex","right","length","displayName","factory","CCFactory","getInstance","replaceSlotDisplay","getArmatureKey","offset","parent","invalidUpdate"],"mappings":";;;;;;AAAAA,EAAE,CAACC,KAAH,CAAS;EACL,WAASD,EAAE,CAACE,SADP;EAGLC,UAAU,EAAE;IACRC,eAAe,EAAC;MACZC,IAAI,EAACC,WAAW,CAACC,eADL;MAEZ,WAAQ;IAFI,CADR;IAKRC,sBAAsB,EAAC;MACnBH,IAAI,EAACC,WAAW,CAACC,eADE;MAEnB,WAAQ;IAFW;EALf,CAHP;EAcLE,KAdK,mBAcI;IACL,KAAKD,sBAAL,CAA4BE,IAA5B,CAAiCC,MAAjC,GAA0C,KAA1C;IACA,KAAKC,gBAAL,GAAwB,CAAxB;IACA,KAAKC,kBAAL,GAA0B,CAA1B;IACA,KAAKC,kBAAL,GAA0B,CAAC,eAAD,EAAkB,gBAAlB,CAA1B;IACA,KAAKC,mBAAL,GAA2B,CAAC;MAACC,CAAC,EAAC,CAAH;MAAKC,CAAC,EAAC;IAAP,CAAD,EAAY;MAACD,CAAC,EAAC,CAAC,EAAJ;MAAOC,CAAC,EAAC;IAAT,CAAZ,CAA3B;EACH,CApBI;EAsBLC,IAtBK,kBAsBG;IACJ,IAAIC,QAAQ,GAAG,KAAKf,eAAL,CAAqBe,QAArB,EAAf;IACA,IAAIC,IAAI,GAAGD,QAAQ,CAACE,OAAT,CAAiB,eAAjB,CAAX;IACAD,IAAI,CAACE,YAAL,GAAoBF,IAAI,CAACE,YAAL,IAAqB,CAArB,GAAyB,CAAzB,GAA6B,CAAjD;EACH,CA1BI;EA4BLC,KA5BK,mBA4BI;IACL,KAAKV,kBAAL;IACA,KAAKA,kBAAL,IAA2B,KAAKC,kBAAL,CAAwBU,MAAnD;IACA,IAAIL,QAAQ,GAAG,KAAKf,eAAL,CAAqBe,QAArB,EAAf;IACA,IAAIC,IAAI,GAAGD,QAAQ,CAACE,OAAT,CAAiB,eAAjB,CAAX;IACA,IAAMI,WAAW,GAAG,KAAKX,kBAAL,CAAwB,KAAKD,kBAA7B,CAApB;IACA,IAAIa,OAAO,GAAGpB,WAAW,CAACqB,SAAZ,CAAsBC,WAAtB,EAAd;IACAF,OAAO,CAACG,kBAAR,CAA2B,KAAKrB,sBAAL,CAA4BsB,cAA5B,EAA3B,EAAyE,QAAzE,EAAmF,UAAnF,EAA+FL,WAA/F,EAA4GL,IAA5G;IAEA,IAAIW,MAAM,GAAG,KAAKhB,mBAAL,CAAyB,KAAKF,kBAA9B,CAAb;IACAO,IAAI,CAACY,MAAL,CAAYD,MAAZ,CAAmBf,CAAnB,GAAuBe,MAAM,CAACf,CAA9B;IACAI,IAAI,CAACY,MAAL,CAAYD,MAAZ,CAAmBd,CAAnB,GAAuBc,MAAM,CAACd,CAA9B;IACAE,QAAQ,CAACc,aAAT;EACH;AAzCI,CAAT","sourceRoot":"/","sourcesContent":["cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        armatureDisplay:{\n            type:dragonBones.ArmatureDisplay,\n            default:null,\n        },\n        replaceArmatureDisplay:{\n            type:dragonBones.ArmatureDisplay,\n            default:null,\n        }\n    },\n\n    start () {\n        this.replaceArmatureDisplay.node.active = false;\n        this._leftWeaponIndex = 0;\n        this._rightDisplayIndex = 0;\n        this._rightDisplayNames = [\"weapon_1004_r\", \"weapon_1004d_r\"];\n        this._rightDisplayOffset = [{x:0,y:0}, {x:-60,y:100}];\n    },\n\n    left () {\n        let armature = this.armatureDisplay.armature();\n        let slot = armature.getSlot(\"weapon_hand_l\");\n        slot.displayIndex = slot.displayIndex == 0 ? 4 : 0;\n    },\n\n    right () {\n        this._rightDisplayIndex++;\n        this._rightDisplayIndex %= this._rightDisplayNames.length;\n        let armature = this.armatureDisplay.armature();\n        let slot = armature.getSlot(\"weapon_hand_r\");\n        const displayName = this._rightDisplayNames[this._rightDisplayIndex];\n        let factory = dragonBones.CCFactory.getInstance();\n        factory.replaceSlotDisplay(this.replaceArmatureDisplay.getArmatureKey(), \"weapon\", \"weapon_r\", displayName, slot);\n\n        let offset = this._rightDisplayOffset[this._rightDisplayIndex];\n        slot.parent.offset.x = offset.x;\n        slot.parent.offset.y = offset.y;\n        armature.invalidUpdate();\n    },\n});\n"]}