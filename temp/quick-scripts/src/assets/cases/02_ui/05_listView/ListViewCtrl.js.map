{"version":3,"sources":["assets/cases/02_ui/05_listView/ListViewCtrl.js"],"names":["cc","Class","Component","properties","itemTemplate","type","Node","scrollView","ScrollView","spawnCount","totalCount","spacing","bufferZone","lblScrollEvent","Label","btnAddItem","Button","btnRemoveItem","btnJumpToPosition","lblJumpPosition","lblTotalItems","onLoad","content","items","initialize","updateTimer","updateInterval","lastContentPosY","height","i","item","instantiate","addChild","setPosition","getComponent","initItem","push","getPositionInView","worldPos","parent","convertToWorldSpaceAR","position","viewPos","node","convertToNodeSpaceAR","update","dt","buffer","isDown","y","offset","length","itemId","itemID","updateItem","textKey","scrollEvent","sender","event","string","addItem","removeItem","error","moveBottomItemToTop","getItemAtBottom","itemComp","scrollToFixedPosition","scrollToOffset","v2"],"mappings":"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","sourceRoot":"/","sourcesContent":["cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        itemTemplate: { // item template to instantiate other items\n            default: null,\n            type: cc.Node\n        },\n        scrollView: {\n        \tdefault: null,\n        \ttype: cc.ScrollView\n        },\n        spawnCount: 0, // how many items we actually spawn\n        totalCount: 0, // how many items we need for the whole list\n        spacing: 0, // space between each item\n        bufferZone: 0, // when item is away from bufferZone, we relocate it\n        lblScrollEvent: cc.Label,\n        btnAddItem: cc.Button,\n        btnRemoveItem: cc.Button,\n        btnJumpToPosition: cc.Button,\n        lblJumpPosition: cc.Label,\n        lblTotalItems: cc.Label,\n    },\n\n    // use this for initialization\n    onLoad: function () {\n    \tthis.content = this.scrollView.content;\n        this.items = []; // array to store spawned items\n    \tthis.initialize();\n        this.updateTimer = 0;\n        this.updateInterval = 0.2;\n        this.lastContentPosY = 0; // use this variable to detect if we are scrolling up or down\n    },\n\n    initialize: function () {\n        this.content.height = this.totalCount * (this.itemTemplate.height + this.spacing) + this.spacing; // get total content height\n    \tfor (let i = 0; i < this.spawnCount; ++i) { // spawn items, we only need to do this once\n    \t\tlet item = cc.instantiate(this.itemTemplate);\n    \t\tthis.content.addChild(item);\n    \t\titem.setPosition(0, -item.height * (0.5 + i) - this.spacing * (i + 1));\n    \t\titem.getComponent('Item').initItem(i, i);\n            this.items.push(item);\n    \t}\n    },\n\n    getPositionInView: function (item) { // get item position in scrollview's node space\n        let worldPos = item.parent.convertToWorldSpaceAR(item.position);\n        let viewPos = this.scrollView.node.convertToNodeSpaceAR(worldPos);\n        return viewPos;\n    },\n\n    update: function(dt) {\n        this.updateTimer += dt;\n        if (this.updateTimer < this.updateInterval) return; // we don't need to do the math every frame\n        this.updateTimer = 0;\n        let items = this.items;\n        let buffer = this.bufferZone;\n        let isDown = this.scrollView.content.y < this.lastContentPosY; // scrolling direction\n        let offset = (this.itemTemplate.height + this.spacing) * items.length;\n        for (let i = 0; i < items.length; ++i) {\n            let viewPos = this.getPositionInView(items[i]);\n            if (isDown) {\n                // if away from buffer zone and not reaching top of content\n                if (viewPos.y < -buffer && items[i].y + offset < 0) {\n                    items[i].y = items[i].y + offset;\n                    let item = items[i].getComponent('Item');\n                    let itemId = item.itemID - items.length; // update item id\n                    item.updateItem(itemId);\n                }\n            } else {\n                // if away from buffer zone and not reaching bottom of content\n                if (viewPos.y > buffer && items[i].y - offset > -this.content.height) {\n                    items[i].y = items[i].y - offset;\n                    let item = items[i].getComponent('Item');\n                    let itemId = item.itemID + items.length;\n                    item.updateItem(itemId);\n                }\n            }\n        }\n        // update lastContentPosY\n        this.lastContentPosY = this.scrollView.content.y;\n        this.lblTotalItems.textKey = \"Total Items: \" + this.totalCount;\n    },\n\n    scrollEvent: function(sender, event) {\n        switch(event) {\n            case 0: \n               this.lblScrollEvent.string = \"Scroll to Top\"; \n               break;\n            case 1: \n               this.lblScrollEvent.string = \"Scroll to Bottom\"; \n               break;\n            case 2: \n               this.lblScrollEvent.string = \"Scroll to Left\"; \n               break;\n            case 3: \n               this.lblScrollEvent.string = \"Scroll to Right\"; \n               break;\n            case 4: \n               this.lblScrollEvent.string = \"Scrolling\"; \n               break;\n            case 5: \n               this.lblScrollEvent.string = \"Bounce Top\"; \n               break;\n            case 6: \n               this.lblScrollEvent.string = \"Bounce bottom\"; \n               break;\n            case 7: \n               this.lblScrollEvent.string = \"Bounce left\"; \n               break;\n            case 8: \n               this.lblScrollEvent.string = \"Bounce right\"; \n               break;\n            case 9: \n               this.lblScrollEvent.string = \"Auto scroll ended\"; \n               break;\n        }\n    },\n\n    addItem: function() {\n        this.content.height = (this.totalCount + 1) * (this.itemTemplate.height + this.spacing) + this.spacing; // get total content height\n        this.totalCount = this.totalCount + 1;\n    },\n\n    removeItem: function() {\n        if (this.totalCount - 1 < 30) {\n            cc.error(\"can't remove item less than 30!\");\n            return;\n        }\n\n        this.content.height = (this.totalCount - 1) * (this.itemTemplate.height + this.spacing) + this.spacing; // get total content height\n        this.totalCount = this.totalCount - 1;\n\n        this.moveBottomItemToTop();\n    },\n\n    moveBottomItemToTop () {\n        let offset = (this.itemTemplate.height + this.spacing) * this.items.length;\n        let length = this.items.length;\n        let item = this.getItemAtBottom();\n\n        // whether need to move to top\n        if (item.y + offset < 0) {\n            item.y = item.y + offset;\n            let itemComp = item.getComponent('Item');\n            let itemId = itemComp.itemID - length;\n            itemComp.updateItem(itemId);\n        }\n    },\n\n    getItemAtBottom () {\n        let item = this.items[0];\n        for (let i = 1; i < this.items.length; ++i) {\n            if (item.y > this.items[i].y) {\n                item = this.items[i];\n            }\n        }\n        return item;\n    },\n\n    scrollToFixedPosition: function () {\n        this.scrollView.scrollToOffset(cc.v2(0, 500), 2);\n    }\n});\n"]}