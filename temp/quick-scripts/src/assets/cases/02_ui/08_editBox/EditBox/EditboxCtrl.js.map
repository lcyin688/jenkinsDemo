{"version":3,"sources":["assets/cases/02_ui/08_editBox/EditBox/EditboxCtrl.js"],"names":["i18n","require","cc","Class","Component","properties","singleLineText","type","EditBox","singleLinePassword","multiLineText","showEditorBoxLabel","Label","onLoad","singleLineEditBoxDidBeginEditing","sender","log","node","name","singleLineEditBoxDidChanged","text","singleLineEditBoxDidEndEditing","string","singleLinePasswordEditBoxDidBeginEditing","singleLinePasswordEditBoxDidChanged","singleLinePasswordEditBoxDidEndEditing","multiLinePasswordEditBoxDidBeginEditing","multiLinePasswordEditBoxDidChanged","multiLinePasswordEditBoxDidEndEditing","buttonClicked","t"],"mappings":"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","sourceRoot":"/","sourcesContent":["const i18n = require('i18n');\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // foo: {\n        //    default: null,\n        //    url: cc.Texture2D,  // optional, default is typeof default\n        //    serializable: true, // optional, default is true\n        //    visible: true,      // optional, default is true\n        //    displayName: 'Foo', // optional\n        //    readonly: false,    // optional, default is false\n        // },\n        // ...\n        singleLineText: {\n            default: null,\n            type: cc.EditBox,\n        },\n\n        singleLinePassword: {\n            default: null,\n            type: cc.EditBox,\n        },\n\n        multiLineText: {\n            default: null,\n            type: cc.EditBox\n        },\n\n        showEditorBoxLabel: {\n            default: null,\n            type: cc.Label\n        }\n\n    },\n\n    // use this for initialization\n    onLoad: function () {\n\n    },\n\n    singleLineEditBoxDidBeginEditing: function(sender) {\n        cc.log(sender.node.name + \" single line editBoxDidBeginEditing\");\n    },\n\n    singleLineEditBoxDidChanged: function(text, sender) {\n        cc.log(sender.node.name + \" single line editBoxDidChanged: \" + text);\n    },\n\n    singleLineEditBoxDidEndEditing: function(sender) {\n        cc.log(sender.node.name + \" single line editBoxDidEndEditing: \" + this.singleLineText.string);\n    },\n\n    singleLinePasswordEditBoxDidBeginEditing: function(sender) {\n        cc.log(sender.node.name + \" single line password editBoxDidBeginEditing\");\n    },\n\n    singleLinePasswordEditBoxDidChanged: function(text, sender) {\n        cc.log(sender.node.name + \" single line password editBoxDidChanged: \" + text);\n    },\n\n    singleLinePasswordEditBoxDidEndEditing: function(sender) {\n        cc.log(sender.node.name + \" single line password editBoxDidEndEditing: \" + this.singleLinePassword.string);\n    },\n\n    multiLinePasswordEditBoxDidBeginEditing: function(sender) {\n        cc.log(sender.node.name + \" multi line editBoxDidBeginEditing\");\n    },\n\n    multiLinePasswordEditBoxDidChanged: function(text, sender) {\n        cc.log(sender.node.name + \" multi line editBoxDidChanged: \" + text);\n    },\n\n    multiLinePasswordEditBoxDidEndEditing: function(sender) {\n        cc.log(sender.node.name + \" multi line editBoxDidEndEditing: \" + this.multiLineText.string);\n    },\n    buttonClicked: function() {\n        cc.log(\"button Clicked!\");\n        if (this.singleLineText.string !== \"\") {\n            this.showEditorBoxLabel.string = i18n.t(\"cases/02_ui/07_editBox/editbox.js.1\") + this.singleLineText.string;\n        }\n        else {\n            this.showEditorBoxLabel.string = \"\";\n        }\n    }\n\n    // called every frame, uncomment this function to activate update callback\n    // update: function (dt) {\n\n    // },\n});\n"]}