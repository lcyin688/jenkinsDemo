{"version":3,"sources":["assets/cases/camera/minimap-with-rendertexture.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\nimport { SpriteFrame } from '../../../creator.d';\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/typescript.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/typescript.html\n// Learn Attribute:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\n\nconst {ccclass, property, executeInEditMode} = cc._decorator;\n\n// camera z value should between camera nearClip and farClip\nconst MINI_CAMERA_Z = 100;\n\n@ccclass\n@executeInEditMode\nexport default class NewClass extends cc.Component {\n\n    @property(cc.Node)\n    target: cc.Node = null;\n\n    @property(cc.Camera)\n    miniMapCamera: cc.Camera = null;\n\n    @property(cc.Graphics)\n    cameraInfo: cc.Graphics = null;\n\n    @property(cc.Sprite)\n    renderTextureSprite: cc.Sprite = null;\n\n    // LIFE-CYCLE CALLBACKS:\n\n    // onLoad () {}\n\n\n    cameraPos = cc.v3(0, 0, MINI_CAMERA_Z);\n    cameraOrthoSize = 1;\n\n    _renderTexture: cc.RenderTexture = new cc.RenderTexture();\n\n    onEnable () {\n        cc.view.on('design-resolution-changed', this._delayInitRenderTexture, this);\n    }\n\n    onDisable () {\n        cc.view.off('design-resolution-changed', this._delayInitRenderTexture, this);\n    }\n\n    _delayInitRenderTexture () {\n        // should calculate size after canvas updated\n        this.scheduleOnce(this._initRenderTexture.bind(this), 0.1);\n    }\n\n    _initRenderTexture () {\n        let { width: canvasWidth, height: canvasHeight } = cc.Canvas.instance.node;\n        let width = canvasWidth * 0.2;\n        let height = canvasHeight * 0.2;\n\n        this._renderTexture.initWithSize(width, height);\n        this.miniMapCamera.targetTexture = this._renderTexture;\n\n        let spriteFrame = new cc.SpriteFrame();\n        spriteFrame.setTexture(this._renderTexture);\n        this.renderTextureSprite.spriteFrame = spriteFrame;\n\n        let deviceWidth = canvasWidth, deviceHeight = canvasHeight;\n        if (!CC_EDITOR) {\n            deviceWidth = cc.game.canvas.width / cc.view._scaleX;\n            deviceHeight = cc.game.canvas.height / cc.view._scaleY;\n        }\n\n        let node = this.renderTextureSprite.node;\n        node.x = deviceWidth / 2 - width / 2;\n        node.y = deviceHeight / 2 - height / 2;\n        node.width = width;\n        node.height = height;\n    }\n\n    _tweens: cc.Tween[] = [];\n\n    start () {\n        this._initRenderTexture();\n        \n        if (!CC_EDITOR) {\n            let t = cc.tween(this.target)\n                .by(6, {angle: 360})\n                .repeatForever()\n                .start()\n            this._tweens.push(t);\n\n            t = cc.tween(this)\n                .set({cameraPos: cc.v3(0, 0, MINI_CAMERA_Z), cameraOrthoSize: cc.Canvas.instance.node.height / 2})\n                .to(6, {cameraOrthoSize: this.target.width / 2})\n                .delay(1)\n                .to(3, {cameraPos: cc.v3(100, 0, MINI_CAMERA_Z)})\n                .union()\n                .repeatForever()\n                .start()\n            this._tweens.push(t);\n        }\n        else {\n            this.cameraOrthoSize = cc.Canvas.instance.node.height / 2;\n        }\n    }\n\n    onDestroy () {\n        this._tweens.forEach(t => {\n            t.stop();\n        })\n    }\n\n    update (dt) {\n        let orthoHeight = this.cameraOrthoSize;\n        let orthoWidth = orthoHeight * (this._renderTexture.width / this._renderTexture.height);\n        \n        this.cameraInfo.clear();\n\n        // draw mini camera border\n        let renderTextureNode = this.renderTextureSprite.node;\n        this.cameraInfo.rect(renderTextureNode.x - renderTextureNode.width/2, renderTextureNode.y - renderTextureNode.height/2, renderTextureNode.width, renderTextureNode.height);\n        this.cameraInfo.strokeColor = cc.Color.YELLOW;\n        this.cameraInfo.stroke();\n\n        // draw mini camera ortho size\n        this.cameraInfo.rect(this.cameraPos.x - orthoWidth, this.cameraPos.y - orthoHeight, orthoWidth * 2, orthoHeight * 2);\n        this.cameraInfo.strokeColor = cc.Color.BLUE;\n        this.cameraInfo.stroke();\n        \n        this.miniMapCamera.node.position = this.cameraPos;\n        this.miniMapCamera.orthoSize = this.cameraOrthoSize;\n    }\n}\n"]}