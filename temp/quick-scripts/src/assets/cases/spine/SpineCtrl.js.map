{"version":3,"sources":["assets/cases/spine/SpineCtrl.js"],"names":["cc","Class","Component","editor","requireComponent","sp","Skeleton","properties","mixTime","onLoad","spine","getComponent","_setMix","setStartListener","trackEntry","animationName","animation","name","log","trackIndex","setInterruptListener","setEndListener","setDisposeListener","setCompleteListener","clearTrack","loopCount","Math","floor","trackTime","animationEnd","setEventListener","event","data","intValue","floatValue","stringValue","_hasStop","toggleDebugSlots","debugSlots","toggleDebugBones","debugBones","toggleTimeScale","timeScale","stop","walk","setAnimation","run","jump","oldAnim","addAnimation","shoot","anim1","anim2","setMix"],"mappings":"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","sourceRoot":"/","sourcesContent":["cc.Class({\n    extends: cc.Component,\n    editor: {\n        requireComponent: sp.Skeleton\n    },\n\n    properties: {\n        mixTime: 0.2\n    },\n\n    onLoad () {\n        var spine = this.spine = this.getComponent('sp.Skeleton');\n        this._setMix('walk', 'run');\n        this._setMix('run', 'jump');\n        this._setMix('walk', 'jump');\n        \n        spine.setStartListener(trackEntry => {\n            var animationName = trackEntry.animation ? trackEntry.animation.name : \"\";\n            cc.log(\"[track %s][animation %s] start.\", trackEntry.trackIndex, animationName);\n        });\n        spine.setInterruptListener(trackEntry => {\n            var animationName = trackEntry.animation ? trackEntry.animation.name : \"\";\n            cc.log(\"[track %s][animation %s] interrupt.\", trackEntry.trackIndex, animationName);\n        });\n        spine.setEndListener(trackEntry => {\n            var animationName = trackEntry.animation ? trackEntry.animation.name : \"\";\n            cc.log(\"[track %s][animation %s] end.\", trackEntry.trackIndex, animationName);\n        });\n        spine.setDisposeListener(trackEntry => {\n            var animationName = trackEntry.animation ? trackEntry.animation.name : \"\";\n            cc.log(\"[track %s][animation %s] will be disposed.\", trackEntry.trackIndex, animationName);\n        });\n        spine.setCompleteListener((trackEntry) => {\n            var animationName = trackEntry.animation ? trackEntry.animation.name : \"\";\n            if (animationName === 'shoot') {\n                this.spine.clearTrack(1);\n            }\n            var loopCount = Math.floor(trackEntry.trackTime / trackEntry.animationEnd); \n            cc.log(\"[track %s][animation %s] complete: %s\", trackEntry.trackIndex, animationName, loopCount);\n        });\n        spine.setEventListener((trackEntry, event) => {\n            var animationName = trackEntry.animation ? trackEntry.animation.name : \"\";\n            cc.log(\"[track %s][animation %s] event: %s, %s, %s, %s\", trackEntry.trackIndex, animationName, event.data.name, event.intValue, event.floatValue, event.stringValue);\n        });\n\n        this._hasStop = false;\n    },\n    \n    // OPTIONS\n    \n    toggleDebugSlots () {\n        this.spine.debugSlots = !this.spine.debugSlots;\n    },\n    \n    toggleDebugBones () {\n        this.spine.debugBones = !this.spine.debugBones;\n    },\n    \n    toggleTimeScale () {\n        if (this.spine.timeScale === 1.0) {\n            this.spine.timeScale = 0.3;\n        }\n        else {\n            this.spine.timeScale = 1.0;\n        }\n    },\n    \n    // ANIMATIONS\n    \n    stop () {\n        this.spine.clearTrack(0);\n        this._hasStop = true;\n    },\n\n    walk () {\n        this.spine.setAnimation(0, 'walk', true);\n        this._hasStop = false;\n    },\n    \n    run () {\n        this.spine.setAnimation(0, 'run', true);\n        this._hasStop = false;\n    },\n    \n    jump () {\n        var oldAnim = this.spine.animation;\n        this.spine.setAnimation(0, 'jump', false);\n        if (oldAnim && !this._hasStop) {\n            this.spine.addAnimation(0, oldAnim === 'run' ? 'run' : 'walk', true, 0);\n        }\n    },\n    \n    shoot () {\n        this.spine.setAnimation(1, 'shoot', false);\n    },\n    \n    //\n    \n    _setMix (anim1, anim2) {\n        this.spine.setMix(anim1, anim2, this.mixTime);\n        this.spine.setMix(anim2, anim1, this.mixTime);\n    }\n});\n"]}