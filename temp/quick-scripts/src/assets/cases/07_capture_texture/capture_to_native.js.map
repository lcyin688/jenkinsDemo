{"version":3,"sources":["assets/cases/07_capture_texture/capture_to_native.js"],"names":["cc","Class","require","properties","_width","_height","start","init","camera","enabled","schedule","picData","initImage","createCanvas","label","string","saveFile","data","texture","readPixels","width","height","filpYImage","Texture2D","initWithData","spriteFrame","SpriteFrame","setTexture","node","Node","sprite","addComponent","Sprite","zIndex","macro","MAX_ZINDEX","parent","director","getScene","winSize","x","y","on","EventType","TOUCH_START","destroy","captureAction","CC_JSB","filePath","jsb","fileUtils","getWritablePath","success","saveImageData","log","error","Uint8Array","rowBytes","row","srow","reStart","i"],"mappings":"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","sourceRoot":"/","sourcesContent":["cc.Class({\n    extends: require('./textureRenderUtils'),\n\n    properties: {\n        _width: 0,\n        _height: 0\n    },\n\n    start () {\n        this.init();\n        // create the capture\n        this.camera.enabled = true;\n        this.schedule(() => {\n            let picData = this.initImage();\n            this.createCanvas(picData);\n            this.label.string = 'Showing the capture'\n            this.saveFile(picData);\n            this.camera.enabled = false;\n        }, 1, 0);\n    },\n    \n    // override\n    initImage () {\n        let data = this.texture.readPixels();\n        this._width = this.texture.width;\n        this._height = this.texture.height;\n        let picData = this.filpYImage(data, this._width, this._height);\n        return picData;\n    },\n\n    // override init with Data\n    createCanvas (picData) {\n        let texture = new cc.Texture2D();\n        texture.initWithData(picData, 32, this._width, this._height);\n\n        let spriteFrame = new cc.SpriteFrame();\n        spriteFrame.setTexture(texture);\n\n        let node = new cc.Node();\n        let sprite = node.addComponent(cc.Sprite);\n        sprite.spriteFrame = spriteFrame;\n\n        node.zIndex = cc.macro.MAX_ZINDEX;\n        node.parent = cc.director.getScene();\n        // set position\n        let width = cc.winSize.width;\n        let height = cc.winSize.height;\n        node.x = width / 2;\n        node.y = height / 2;\n        node.on(cc.Node.EventType.TOUCH_START, () => {\n            node.parent = null;\n            this.label.string = '';\n            node.destroy();\n        });\n\n        this.captureAction(node, width, height);\n    },\n\n    saveFile (picData) {\n        if (CC_JSB) {\n            let filePath = jsb.fileUtils.getWritablePath() + 'render_to_sprite_image.png';\n\n            let success = jsb.saveImageData(picData, this._width, this._height, filePath)\n            if (success) {\n                cc.log(\"save image data success, file: \" + filePath);\n            }\n            else {\n                cc.error(\"save image data failed!\");\n            }\n        }\n    },\n\n    // This is a temporary solution\n    filpYImage (data, width, height) {\n        // create the data array\n        let picData = new Uint8Array(width * height * 4);\n        let rowBytes = width * 4;\n        for (let row = 0; row < height; row++) {\n            let srow = height - 1 - row;\n            let start = srow * width * 4;\n            let reStart = row * width * 4;\n            // save the piexls data\n            for (let i = 0; i < rowBytes; i++) {\n                picData[reStart + i] = data[start + i];\n            }\n        }\n        return picData;\n    }\n}); \n"]}