{"version":3,"sources":["assets/cases/graphics/demo/draw-line.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/typescript.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/typescript.html\n// Learn Attribute:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\n\nconst {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class NewClass extends cc.Component {\n    // LIFE-CYCLE CALLBACKS:\n\n    // onLoad () {}\n\n    touches: cc.Vec2[] = []\n    graphics: cc.Graphics = null;\n\n    start () {\n        var canvas = cc.find('Canvas');\n        canvas.on(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);\n        canvas.on(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);\n        canvas.on(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this);\n\n        this.graphics = this.getComponent(cc.Graphics);\n        this.graphics.moveTo(0, 0);\n        this.graphics.lineTo(0.1, 0);\n        this.graphics.lineTo(-0.11, 0);\n        this.graphics.stroke();\n    }\n\n    onTouchStart (event) {\n        this.touches.length = 0;\n        this.touches.push(event.touch.getLocation());\n    }\n\n    onTouchMove (event) {\n        let touches = this.touches;\n        touches.push(event.touch.getLocation());\n\n        const MIN_POINT_DISTANCE = 2;\n\n        this.graphics.clear();\n        let worldPos = this.node.convertToWorldSpaceAR(cc.v2());\n        this.graphics.moveTo(touches[0].x - worldPos.x, touches[0].y - worldPos.y);\n        let lastIndex = 0;\n        for (let i = 1, l = touches.length; i < l; i++) {\n            if (touches[i].sub(touches[lastIndex]).mag() < MIN_POINT_DISTANCE) {\n                continue;\n            }\n            lastIndex = i;\n            this.graphics.lineTo(touches[i].x - worldPos.x, touches[i].y - worldPos.y);\n        }\n        this.graphics.stroke();\n    }\n\n    onTouchEnd (event) {\n    }\n\n    // update (dt) {}\n}\n"]}