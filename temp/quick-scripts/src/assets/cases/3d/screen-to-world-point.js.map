{"version":3,"sources":["assets/cases/3d/screen-to-world-point.js"],"names":["WHITE","cc","Color","Class","Component","properties","box","Node","distanceLabel","Label","start","canvas","find","on","EventType","TOUCH_START","onTouchStart","TOUCH_MOVE","onTouchMove","distance","event","moveBox","touch","getLocation","touchPos","camera","Camera","findCamera","pos","getScreenToWorldPoint","v3","x","y","position","parent","convertToNodeSpaceAR","distanceChanged","slider","parseFloat","progress","toFixed","string"],"mappings":";;;;;;AAAA,IAAMA,KAAK,GAAGC,EAAE,CAACC,KAAH,CAASF,KAAvB;AAEAC,EAAE,CAACE,KAAH,CAAS;EACL,WAASF,EAAE,CAACG,SADP;EAGLC,UAAU,EAAE;IACRC,GAAG,EAAEL,EAAE,CAACM,IADA;IAERC,aAAa,EAAEP,EAAE,CAACQ;EAFV,CAHP;EAQL;EAEA;EAEAC,KAZK,mBAYI;IACL,IAAIC,MAAM,GAAGV,EAAE,CAACW,IAAH,CAAQ,QAAR,CAAb;IACAD,MAAM,CAACE,EAAP,CAAUZ,EAAE,CAACM,IAAH,CAAQO,SAAR,CAAkBC,WAA5B,EAAyC,KAAKC,YAA9C,EAA4D,IAA5D;IACAL,MAAM,CAACE,EAAP,CAAUZ,EAAE,CAACM,IAAH,CAAQO,SAAR,CAAkBG,UAA5B,EAAwC,KAAKC,WAA7C,EAA0D,IAA1D;IAEA,KAAKC,QAAL,GAAgB,GAAhB;EACH,CAlBI;EAoBLH,YApBK,wBAoBSI,KApBT,EAoBgB;IACjB,KAAKC,OAAL,CAAaD,KAAK,CAACE,KAAN,CAAYC,WAAZ,EAAb;EACH,CAtBI;EAwBLL,WAxBK,uBAwBQE,KAxBR,EAwBe;IAChB,KAAKC,OAAL,CAAaD,KAAK,CAACE,KAAN,CAAYC,WAAZ,EAAb;EACH,CA1BI;EA4BLF,OA5BK,mBA4BIG,QA5BJ,EA4Bc;IACf,IAAIC,MAAM,GAAGxB,EAAE,CAACyB,MAAH,CAAUC,UAAV,CAAqB,KAAKrB,GAA1B,CAAb;IACA,IAAIsB,GAAG,GAAGH,MAAM,CAACI,qBAAP,CAA6B5B,EAAE,CAAC6B,EAAH,CAAMN,QAAQ,CAACO,CAAf,EAAkBP,QAAQ,CAACQ,CAA3B,EAA8B,KAAKb,QAAnC,CAA7B,CAAV;IACA,KAAKb,GAAL,CAAS2B,QAAT,GAAoB,KAAK3B,GAAL,CAAS4B,MAAT,CAAgBC,oBAAhB,CAAqCP,GAArC,CAApB;EACH,CAhCI;EAkCLQ,eAlCK,2BAkCYC,MAlCZ,EAkCoB;IACrB,KAAKlB,QAAL,GAAgBmB,UAAU,CAACD,MAAM,CAACE,QAAP,CAAgBC,OAAhB,CAAwB,CAAxB,CAAD,CAA1B;IACA,KAAKhC,aAAL,CAAmBiC,MAAnB,GAA4B,gBAAgB,KAAKtB,QAAjD;EACH;AArCI,CAAT","sourceRoot":"/","sourcesContent":["const WHITE = cc.Color.WHITE;\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        box: cc.Node,\n        distanceLabel: cc.Label\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    // onLoad () {},\n\n    start () {\n        var canvas = cc.find('Canvas');\n        canvas.on(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);\n        canvas.on(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);\n        \n        this.distance = 0.5;\n    },\n\n    onTouchStart (event) {\n        this.moveBox(event.touch.getLocation());\n    },\n\n    onTouchMove (event) {\n        this.moveBox(event.touch.getLocation());\n    },\n\n    moveBox (touchPos) {\n        let camera = cc.Camera.findCamera(this.box);\n        let pos = camera.getScreenToWorldPoint(cc.v3(touchPos.x, touchPos.y, this.distance));\n        this.box.position = this.box.parent.convertToNodeSpaceAR(pos);\n    },\n\n    distanceChanged (slider) {\n        this.distance = parseFloat(slider.progress.toFixed(2));\n        this.distanceLabel.string = 'distance : ' + this.distance;\n    }\n});\n"]}